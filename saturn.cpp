#define USE_SPRITES 1
#include "wl_def.h"
#include "sdl/SDL.h"
#include "sdl/SDL_mixer.h"
#include <stdlib.h>  /* malloc */
//#include <string.h>  /* memcpy */
#include <ctype.h>  /* toupper */
#include <malloc.h>
extern "C" {

//#include "L:\saturn\dev\sms_elf2\cdc\SEGA_CDC.H"
#include	"C:/SaturnOrbit/SGL_302j/INC/sl_def.h"
//#ifdef VBT
 #include "sega_cdc.h"
//#endif

}
//#define VBT

void /* Slave SH2 main loop (RUNS on slave SH) */
  SPR_SlaveSHmain(void);
void /* slave SH Initialize (RUNS on main SH) */
  SPR_InitSlaveSH(void);  


//
#ifdef USE_SPRITES
extern TEXTURE tex_spr[SPR_TOTAL+SATURN_WIDTH];
#endif

#ifdef VBT
int CdUnlock();
#define SYS_CDINIT1(i) \
((**(void(**)(int))0x60002dc)(i))

#define SYS_CDINIT2() \
((**(void(**)(void))0x600029c)())
#endif

extern "C" {
	extern void DMA_ScuInit(void);
//	extern void SPR_InitSlaveSH(void);
	extern void DMA_ScuMemCopy(void *dst, void *src, Uint32 cnt);
	extern Uint32 DMA_ScuResult(void);
	extern void memcpywh(char *dst, char *src, short width, short height, short step);// , long srchstep, long srcwstep, char flag);
//	extern void memcpyl(void *dst, void *src, int size);
}
void SCU_DMAWait(void);

extern void CheckWeaponChange (void);
//extern void ShapeTest (void);
//#define ACTION_REPLAY 1
#ifndef ACTION_REPLAY
GfsDirName dir_name[MAX_DIR];
#endif

   /*
#define SDL_FillRect(arg1, dest, arg3)	\
	slBMBoxFill((dest)->x, (dest)->y, (dest)->x + (dest)->w - 1, (dest)->y + (dest)->h - 1, 0)
	 */
void Pal2CRAM( Uint16 *Pal_Data , void *Col_Adr , Uint32 suu );
void InitCD();
void InitCDBlock(void);
void ChangeDir(char *dirname);
int SDL_InitSubSystem(Uint32 flags);
Sint32 GetFileSize(int file_id);
/*
 debug
*/
//Uint32 frame = 0;
static unsigned char vbt_event[13][2];
static int current_event=0;
static Uint32 previouscount=0;
static Uint16 previousmillis=0;
PCM m_dat[4];

static	CdcPly	playdata;
static	CdcPos	posdata;

static Uint16 pad_asign[] = {
	PER_DGT_KU,
	PER_DGT_KD,
	PER_DGT_KR,
	PER_DGT_KL,
	PER_DGT_TA,
	PER_DGT_TB,
	PER_DGT_TC,
	PER_DGT_ST,
	PER_DGT_TX,
	PER_DGT_TY,
	PER_DGT_TZ,
	PER_DGT_TR,
	PER_DGT_TL,
};

static const Sint8	logtbl[] = {
/* 0 */		0, 
/* 1 */		1, 
/* 2 */		2, 2, 
/* 4 */		3, 3, 3, 3, 
/* 8 */		4, 4, 4, 4, 4, 4, 4, 4, 
/* 16 */	5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
/* 32 */	6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
			6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
/* 64 */	7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
			7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
			7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
			7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 
/* 128 */	8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 
			8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8
	};

/*
 dummy
 */

//--------------------------------------------------------------------------------------------------------------------------------------
 SDL_Surface * SDL_SetVideoMode  (int width, int height, int bpp, Uint32 flags)
{
	unsigned char tv_mode;
	SDL_Surface *screeny;
	screeny = (SDL_Surface*)malloc(sizeof(SDL_Surface));
	CHECKMALLOCRESULT(screeny);
	if(width==320)
	{
		tv_mode = TV_320x224;
		if(height==240) tv_mode = TV_320x240; 
	}

	if(width==352)
	{
		tv_mode = TV_352x224;
		if(height==240) tv_mode = TV_352x240; 
	}

	if(width==640)
	{
		tv_mode = TV_640x224;
		if(height==240) tv_mode = TV_640x240; 
	}
#ifdef USE_SPRITES 
	slInitSystem(tv_mode, (TEXTURE*)tex_spr, 1);
#else
	slInitSystem(tv_mode, NULL, 1);
#endif	

//	slZdspLevel(8);
// vbt 26/07/2020
//	slDynamicFrame(ON);

	if(bpp==8)
	{
		slColRAMMode(CRM16_1024);
		slCharNbg1(COL_TYPE_256 , CHAR_SIZE_1x1);
	}
	else
	{
		slColRAMMode(CRM32_1024);
		slCharNbg1(COL_TYPE_32768 , CHAR_SIZE_1x1);
	}

//	slScrPosNbg1(toFIXED(0) , toFIXED(0));
    slInitBitMap(bmNBG1, BM_512x256, (void *)NBG1_CEL_ADR);
    slBMPaletteNbg1(1);

    // screen coordinates like in SDL
//    slBitMapBase(0, 0);
//#define		BACK_COL_ADR		( VDP2_VRAM_A1 + 0x1fffe )	
//	slBack1ColSet((void *)BACK_COL_ADR , RGB(14,14,14));
//	slScrTransparent(RBG0ON);
	
//    slScrAutoDisp(RBG0ON| NBG0ON| NBG1ON| NBG3ON);
    slScrAutoDisp(NBG0ON| NBG1ON);
	

/*  /// vbt à remettre
slCharNbg3(COL_TYPE_256, CHAR_SIZE_1x1); 
slPageNbg3((void*)0x25e60000, 0, PNB_1WORD|CN_10BIT ); 
slPlaneNbg3(PL_SIZE_1x1); 
slMapNbg3((void*)0x25e76000, (void*)0x25e76000, (void*)0x25e76000, (void*)0x25e76000); 

slBitMapNbg0(COL_TYPE_16, BM_512x256, (void *)VDP2_VRAM_A0); 
slBMPalette(bmNBG0 , 0);
slPriorityRbg0(7);
slPriorityNbg3(7);
*/
	slPriorityNbg0(7);  // avant rbg0
	slPriorityNbg1(6);
	slPrioritySpr0(5);
#ifdef USE_SPRITES 	
	slZdspLevel(7); // vbt : ne pas déplacer !!!
#endif	
	screeny->pixels = (unsigned char*)malloc(sizeof(unsigned char)*width*height);
	
	CHECKMALLOCRESULT(screeny->pixels);
	screeny->pitch = width;
	screeny->w     = width;
	screeny->h     = height;	
//	memset(screen->pixels,0x00,width*height);
	return screeny;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_SetColors(SDL_Surface *surface, 	SDL_Color *colors, int firstcolor, int ncolors)
{
	Uint16	palo[256];
//	CHECKMALLOCRESULT(palo);

	for(unsigned int i=0;i<ncolors;i++)
	{
		palo[i] = 0x8000 | RGB(colors[i].r>>3,colors[i].g>>3,colors[i].b>>3);
	}
	Pal2CRAM(palo , (void *)NBG1_COL_ADR , ncolors);
//	Pal2CRAM(palo , (void *)TEX_COL_ADR , ncolors);
	Pal2CRAM(palo+14 , (void *)NBG0_COL_ADR , ncolors);
	
	return 1;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_SetColorKey	(SDL_Surface *surface, Uint32 flag, Uint32 key)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
static unsigned char initcddone=0;
int SDL_Init(Uint32 flags)
{
	//lowram=(Uint8 *)0x00202000;
#ifndef ACTION_REPLAY
	if(initcddone==0)
	{
		InitCD();
		InitCDBlock();
		initcddone=1;
	}
#endif
//	DMA_ScuInit();
//	SPR_InitSlaveSH();
	SDL_InitSubSystem(flags);
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_InitSubSystem(Uint32 flags)
{
	if(flags &= SDL_INIT_AUDIO)
	{
		char sound_map[] =  {0xff,0xff,0xff,0xff};//,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
	//slPrint("init sound                                    ",slLocate(2,21));
#ifdef ACTION_REPLAY
		slInitSound(sddrvstsk , sizeof(sddrvstsk) , (Uint8 *)sound_map , sizeof(sound_map)) ;
#else
#define	SDDRV_NAME	"SDDRVS.TSK"
#define	SDDRV_SIZE	26610 //0x7000
#define	SDDRV_ADDR	0x00202000//0x6080000
unsigned char *sndDrvAddr;
		sndDrvAddr = (unsigned char *)SDDRV_ADDR;
		GFS_Load(GFS_NameToId((Sint8*)SDDRV_NAME),0,(void *) sndDrvAddr,SDDRV_SIZE);
		slInitSound(sndDrvAddr , SDDRV_SIZE , (Uint8 *)sound_map , sizeof(sound_map)) ;
		sndDrvAddr = NULL;		
//	slPrint("                                    ",slLocate(2,21));
#endif
	}

	if(flags &= SDL_INIT_TIMER)
	{
		TIM_FRT_INIT(TIM_CKS_32);
		TIM_FRT_SET_16(0);
	}
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
/*
Uint8 SDL_EventState(Uint8 type, int state)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_WarpMouse(Uint16 x, Uint16 y)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_JoystickNumHats(SDL_Joystick *joystick)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_NumJoysticks(void)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_JoystickNumButtons(SDL_Joystick *joystick)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_Joystick * SDL_JoystickOpen(int device_index)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_JoystickUpdate(void)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_JoystickClose(SDL_Joystick *joystick)
{

}
*/
//--------------------------------------------------------------------------------------------------------------------------------------
/*SDLMod SDL_GetModState(void)
{
	//slPrint("SDL_GetModState empty" ,slLocate(2,22));	 
	return KMOD_NONE;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_GrabMode SDL_WM_GrabInput(SDL_GrabMode mode)
{
	return SDL_GRAB_OFF;
}
//--------------------------------------------------------------------------------------------------------------------------------------

Uint8 SDL_JoystickGetButton(SDL_Joystick *joystick, int button)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
Uint8 SDL_JoystickGetHat(SDL_Joystick *joystick, int hat)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
Sint16 SDL_JoystickGetAxis(SDL_Joystick *joystick, int axis)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
Uint8 SDL_GetMouseState(int *x, int *y)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_LockSurface(SDL_Surface *surface)
{
	return 0;
}*/
//--------------------------------------------------------------------------------------------------------------------------------------
Uint32 SDL_MapRGB (SDL_PixelFormat *format, Uint8 r, Uint8 g, Uint8 b)
{
	return 0x8000 | RGB(r>>3,g>>3,b>>3);
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_UnlockSurface(SDL_Surface *surface)
{
	unsigned short i; // vbt : le plus rapide
	for (i = 0; i < screenHeight; i++) 
	{
//		DMA_ScuMemCopy((unsigned char*)(NBG1_CEL_ADR + (i<<9)), (unsigned char*)(surface->pixels + (i * screenWidth)), screenWidth); // vbt 20-22fps
//		SCU_DMAWait();
//		memcpyl((unsigned long*)(NBG1_CEL_ADR + (i<<9)), (unsigned long*)(surface->pixels + (i * screenWidth)), screenWidth); // vbt : 22-24fps
// vbt : remttre la copie dma		
		slDMACopy((unsigned long*)(surface->pixels + (i * screenWidth)),(void *)(NBG1_CEL_ADR + (i<<9)),screenWidth);
	}
//xxxxx	
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_OpenAudio(SDL_AudioSpec *desired, SDL_AudioSpec *obtained)
{
	Sint32		oct, shift_freq, fns;
	Uint8 i;
	Sint8 err=0;
	memcpy(obtained,desired,sizeof(SDL_AudioSpec));

	for (i=0; i<4; i++)
	{
		m_dat[i].mode = 0;

		if(desired->format==AUDIO_U8 || desired->format==AUDIO_S8)  m_dat[i].mode|=_PCM8Bit;
		if(desired->format==AUDIO_U16LSB || desired->format==AUDIO_S16LSB)  m_dat[i].mode|=_PCM16Bit;
		if(desired->channels==1) m_dat[i].mode|=_Mono;
		if(desired->channels==2) m_dat[i].mode|=_Stereo;

		oct			= PCM_CALC_OCT(desired->freq);
		shift_freq = PCM_CALC_SHIFT_FREQ(oct);
		fns			= PCM_CALC_FNS(desired->freq, shift_freq);

		m_dat[i].pitch =PCM_SET_PITCH_WORD(oct, fns);
		m_dat[i].level = 127;
		m_dat[i].channel = i*2;
		//m_dat[i].efselectR = i;
		/*
		if(!slPCMParmChange(&m_dat[i]))
		{
			err--;
		}	 */
//		slSynch();  // vbt 26/05/2019 remis // change rien
	}
	return err;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_CloseAudio(void)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_PauseAudio(int pause_on)
{
	Uint8 i;
	for (i=0;i<4;i++)
		slPCMOff(&m_dat[i]);
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_UpperBlit (SDL_Surface *src, SDL_Rect *srcrect, SDL_Surface *dst, SDL_Rect *dstrect)
{
if((srcrect)!=NULL)
	for( Sint16 i=0;i<srcrect->h;i++)
	{
//		memcpyl((unsigned long*)(dst->pixels + ((i + dstrect->y) * dst->pitch) + dstrect->x),(unsigned long*)(src->pixels + ((i + srcrect->y) * src->pitch) + srcrect->x),srcrect->w);
		slDMACopy((unsigned long*)(src->pixels + ((i + srcrect->y) * src->pitch) + srcrect->x),(unsigned long*)(dst->pixels + ((i + dstrect->y) * dst->pitch) + dstrect->x),srcrect->w);
	}	
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
/*void SDL_UpdateRects (SDL_Surface *screen, int numrects, SDL_Rect *rects)
{
//	slBMPut(0, 0, 320-1, 240-1, (Sint8*)screen->pixels);
}
//--------------------------------------------------------------------------------------------------------------------------------------

void SDL_UpdateRect (SDL_Surface *screen, Sint32 x, Sint32 y, Uint32 w, Uint32 h)
{
//slPrint("SDL_UpdateRect  empty       ",slLocate(10,22));
}
*/
//--------------------------------------------------------------------------------------------------------------------------------------

int SDL_FillRect (SDL_Surface *dst, SDL_Rect *dstrect, Uint32 color)
{
	if((dst)!=NULL)		
		if((dstrect)!=NULL)
		{
	//		slBMBoxFill(dstrect->x, dstrect->y, dstrect->x + dstrect->w - 1, dstrect->y + dstrect->h - 1, color);
		Uint8*d = (Uint8*)dst->pixels + dstrect->x; 

		for( Sint16 i=0;i<dstrect->h;i++)
			{
				memset(d,color,dstrect->w);
				d+=dst->pitch;
			}
		}
		else
		{
	//		slBMBoxFill(dstrect->x, dstrect->y, dstrect->x + dstrect->w - 1, dstrect->y + dstrect->h - 1, color);
		   memset(dst->pixels,color,screenWidth*screenHeight);
		}

	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_Surface * SDL_CreateRGBSurface(Uint32 flags, int width, int height, int depth, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)
{
	SDL_Surface *screeny;
	screeny = (SDL_Surface*)malloc(sizeof(SDL_Surface));
	CHECKMALLOCRESULT(screeny);
	screeny->pixels = (unsigned char*)malloc(sizeof(unsigned char)*width*height);
//	screeny->pixels = (unsigned char*)0x002E0000;
	CHECKMALLOCRESULT(screeny->pixels);
	screeny->pitch = width;
	screeny->w     = width;
	screeny->h     = height;
	
	return screeny;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_Quit(void)
{
	SYS_Exit(0);
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_SetPalette(SDL_Surface *surface, int flags, SDL_Color *colors, int firstcolor, int ncolors)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
char * SDL_GetError(void)
{
	return (char*)"Error !!!";
}
//--------------------------------------------------------------------------------------------------------------------------------------
const SDL_VideoInfo * SDL_GetVideoInfo(void)
{
		 SDL_VideoInfo *vidInfo;
		 vidInfo = (SDL_VideoInfo *)malloc(sizeof(SDL_VideoInfo));
         CHECKMALLOCRESULT(vidInfo);
		 vidInfo->vfmt = (SDL_PixelFormat*)malloc(sizeof(SDL_PixelFormat));
         CHECKMALLOCRESULT(vidInfo->vfmt);
		 vidInfo->vfmt->BitsPerPixel = 8;
		 return vidInfo;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_Rect ** SDL_ListModes(SDL_PixelFormat *format, Uint32 flags)
{
	return (SDL_Rect **)-1;
}
//--------------------------------------------------------------------------------------------------------------------------------------
/*
void SDL_WM_SetCaption(const char *title, const char *icon)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_WM_GetCaption(char **title, char **icon)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_Surface * SDL_CreateRGBSurfaceFrom(void *pixels,
			int width, int height, int depth, int pitch,
			Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)
{
	return NULL;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_WM_SetIcon(SDL_Surface *icon, Uint8 *mask)
{

}
*/
/*
<vbt> :) looks easy but hard for me
<MartinMan> hmm
<MartinMan> ah
<vbt> for me at first poll I can add multiple events
<MartinMan> no, you just need to return 1 at a time
<vbt> then return the first event not executed
<MartinMan> First, make a list of all supported buttons/directions
<MartinMan> then you assign a number (starting from 0) to each of them
<MartinMan> then when poll() is called, you increase the number until you find a changed button/direction
<MartinMan> and if no more left, return false
<MartinMan> of course you need to store and update a joypad state variable to look for changed buttons/directions
*/



// boucle si UP+RIGHT ou UP+LEFT

/*
sc_1, sc_2, sc_3, sc_4
*/

int SDL_PollEvent(SDL_Event *event)
{
	Uint16 push = 0, data = 0;
	Uint8 i,found=0;
 				 //LastScan=0;
	//event->type = SDL_NOEVENT;
	//event->key.keysym.sym = SDLK_FIRST;	  
//slPrint("SDL_PollEvent       ",slLocate(3,22));	
	if(Per_Connect1) {
		push = ~Smpc_Peripheral[0].push;
		data = ~Smpc_Peripheral[0].data;
	}
/*	if(Per_Connect2) {
		push |= ~Smpc_Peripheral[15].push;
		data |= ~Smpc_Peripheral[15].data;
	}		*/
	/*
	 quit?
	*/
			
	if(data & PER_DGT_ST && data & PER_DGT_TA && data & PER_DGT_TB && data & PER_DGT_TC) 
	{
		event->type = SDL_QUIT;
		return 1;
	}

	for (i=0;i <13; i++)
	{
		if(data & pad_asign[i])
		{
			if(vbt_event[i][0]!=SDL_KEYDOWN)
			{
				vbt_event[i][0]=SDL_KEYDOWN;
				vbt_event[i][1]=1;
			}
		}
		else/* if(push & pad_asign[i])		 */
		{
			
			if(vbt_event[i][0]==SDL_KEYDOWN)
			{
				vbt_event[i][0]=SDL_KEYUP;
				vbt_event[i][1]=1;
				 //control_status =0;
				 //LastScan=0;
			}/*		  
			else	 if(vbt_event[i][0]==SDL_KEYUP)
			{
				vbt_event[i][0]=0;
				vbt_event[i][1]=0;
				 //LastScan=0;
			}			*/
			else
			{
			  	vbt_event[i][1]=0;				 
				vbt_event[i][0]=0;
				 //LastScan=0;
			}
		}
	}	  
	for (i=0;i <13; i++)
	{
		if (vbt_event[i][1]==1)
		{
			////slPrintHex(i,slLocate(3,21));
			current_event=i;
			found=1;
			break;
		}
	}

/*
	PER_DGT_KU,
	PER_DGT_KD,
	PER_DGT_KR,
	PER_DGT_KL,
	PER_DGT_TA,
	PER_DGT_TB,
	PER_DGT_TC,
	*/

	
	if(data & pad_asign[0])
    {
		if(! (data & pad_asign[2]))
		Keyboard[sc_RightArrow]=0;//vbt_event[2][1]=0;

		if(! (data & pad_asign[3]))
		Keyboard[sc_LeftArrow]=0;//vbt_event[3][1]=0;
    }

	if(data & pad_asign[1])
    {
		if(! (data & pad_asign[2]))
		Keyboard[sc_RightArrow]=0;//vbt_event[2][1]=0;

		if(! (data & pad_asign[3]))
		Keyboard[sc_LeftArrow]=0;//vbt_event[3][1]=0;
    }

	if(data & pad_asign[2])
		Keyboard[sc_RightArrow]=1;

	if(data & pad_asign[3])
		Keyboard[sc_LeftArrow]=1;
	//IN_ClearKeysDown();

	if(found)
	{
		/*char toto[500];
		sprintf(toto,"evt %d action %d key %d",vbt_event[current_event][0],vbt_event[current_event][1],event->key.keysym.sym );
				//slPrint(toto,slLocate(3,25));	 */
		event->type = 	 vbt_event[current_event][0];
		if(vbt_event[current_event][0]==SDL_KEYUP)
		{
			vbt_event[current_event][0] = SDL_NOEVENT;
			vbt_event[i][1]=0;
		}
		//event->type = SDL_KEYDOWN;

		switch(current_event)
		{
			case 4:/*PER_DGT_TA: */
			event->key.keysym.sym = SDLK_KP_ENTER;
			break;
			
			case 5:/*PER_DGT_TB: */
			event->key.keysym.sym = SDLK_SPACE;
			break;	
			
			case 6:/*PER_DGT_TC: */
			case 10:/*PER_DGT_TZ: */
			event->key.keysym.sym = SDLK_RCTRL;
			break;	

			case 8:/*PER_DGT_TX: */
			event->key.keysym.sym = SDLK_RALT;
			break;
			
			case 9:/*PER_DGT_TY: */
			event->key.keysym.sym = SDLK_RSHIFT;
			break;	

			case 11:/*PER_DGT_TL: */
			//event->key.keysym.sym = 
			buttonstate[bt_prevweapon] = true;
			CheckWeaponChange ();
			break;	

			case 12:/*PER_DGT_TR: */
			//event->key.keysym.sym = 
			buttonstate[bt_nextweapon] = true;
			CheckWeaponChange ();
			break;	

			case 7:/*PER_DGT_ST: */
				////slPrint("gros connard",slLocate(3,24));
			event->key.keysym.sym = SDLK_ESCAPE;
			break;	

			case 3:/*PER_DGT_KL: */
				event->key.keysym.sym = SDLK_KP4;
			break;	

			case 2:/*PER_DGT_KR: */
				event->key.keysym.sym = SDLK_KP6;
			break;	

			case 1:/*PER_DGT_KD: */
				////slPrint("gros ggggg",slLocate(3,20));
			event->key.keysym.sym = SDLK_KP2;
			break;	

			case 0:/*PER_DGT_KU: */
				////slPrint("gros ggggg",slLocate(3,20));
			event->key.keysym.sym = SDLK_KP8;
			break;	

			default:
				////slPrint("pas trouvé",slLocate(3,20));
				//event->key.keysym.sym =999;
				//event->type = SDL_NOEVENT;
				event->key.keysym.sym = SDLK_LAST;//SDLK_FIRST;	  
				break;
		}
		return 1;
	}
	//else
	//{
//slPrint("IN_ClearKeysDown       ",slLocate(3,22));	
		
	IN_ClearKeysDown();
			event->type = SDL_KEYUP;
			//vbt_event[current_event][0] = SDL_NOEVENT;
			//vbt_event[i][1]=0;
			//event->key.keysym.sym = SDLK_LAST;	
	//}
	for (i=0;i <13; i++)
	{
	//	if (vbt_event[i][1]==1)
		{
				vbt_event[i][0]=0;
				vbt_event[i][1]=0;
		}
	}
	//control_status =0;
	//LastScan=0;
	//event->type = SDL_KEYUP;
	//event->key.keysym.sym = SDLK_LAST;	  
//slPrint("SDL_PollEvent end       ",slLocate(3,22));		
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_WaitEvent(SDL_Event *event)
{
	//event->type = SDL_NOEVENT;
#if 0
	if (event->type== SDL_KEYUP) {
		event->type = SDL_NOEVENT;
		event->key.keysym.sym = SDLK_FIRST;	
		return 1;
	}
 
	do {	
		 /*
		 take pressed buttons of both pads, to enable two player
		 */
		Uint16 push = 0, data = 0;
		if(Per_Connect1) {
			push = ~Smpc_Peripheral[0].push;
			data = ~Smpc_Peripheral[0].data;
		}
		if(Per_Connect2) {
			push |= ~Smpc_Peripheral[15].push;
			data |= ~Smpc_Peripheral[15].data;
		}
		/*
		 quit?
		*/
		if(data & PER_DGT_ST && data & PER_DGT_TA && data & PER_DGT_TB && data & PER_DGT_TC) {
			event->type = SDL_QUIT;
			return 1;
		}		
		/*
			move cursor
		*/
/*		if(data & PER_DGT_ST) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_SPACE;
			return;
		}

		if(!(data & PER_DGT_ST) 
			&& event->key.keysym.sym == SDLK_SPACE
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return;
		}
  */
		if(data & PER_DGT_TA) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_KP_ENTER;
			return 1;
		}
		
		if(!(data & PER_DGT_TA) 
			&& event->key.keysym.sym == SDLK_KP_ENTER
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}

		if(data & PER_DGT_TB) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_e;
			return 1;
		}		
		
		if(!(data & PER_DGT_TB) 
			&& event->key.keysym.sym == SDLK_e
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}

		if(data & PER_DGT_TC) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_p;
			return 1;
		}
		
		if(!(data & PER_DGT_TC) 
			&& event->key.keysym.sym == SDLK_p
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}

		if(data & PER_DGT_KL) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_z;
			return 1;
		}
		
		if(!(data & PER_DGT_KL) 
			&& event->key.keysym.sym == SDLK_z
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}

		if(data & PER_DGT_KR) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_x;
			return 1;
		}
		
		if(!(data & PER_DGT_KR) 
			&& event->key.keysym.sym == SDLK_x
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}

		if(data & PER_DGT_KU) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_o;
			return 1;
		}
		
		if(!(data & PER_DGT_KU) 
			&& event->key.keysym.sym == SDLK_o
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}

		if(data & PER_DGT_KD) {
			event->type = SDL_KEYDOWN;
			event->key.keysym.sym = SDLK_k;
			return 1;
		}
		
		if(!(data & PER_DGT_KD) 
			&& event->key.keysym.sym == SDLK_k
			&& event->type                     == SDL_KEYDOWN) {
			event->type = SDL_KEYUP;
			return 1;
		}
	} while(event->type == SDL_NOEVENT);
#endif
	return 0;
}
/*
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_DestroyMutex(SDL_mutex *mutex)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
void Mix_FreeChunk(Mix_Chunk *chunk)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
Mix_Chunk *Mix_LoadWAV_RW(SDL_RWops *src, int freesrc)
{
	return NULL;
}*/
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_PlayChannel (int channel, Mix_Chunk *chunk, int loops)
{
	unsigned char i;
//	slPrintHex(chunk->alen,slLocate(2,10));
//	slPrintHex(&chunk->abuf[0],slLocate(2,11));
//	slPCMOn(sounds[chunk].pcm, sounds[chunk].data, sounds[chunk].size);

	if(chunk->alen>0 && chunk->alen <100000)
	for(i=0;i<4;i++)
	{
		if(!slPCMStat(&m_dat[i]))
		{
			//slPCMOff(&m_dat[i]);
			//slPCMParmChange(&m_dat[i]);
			slSndFlush() ;
// vbt 26/07/2020 : à remettre	
				m_dat[i].mode= _PCM8Bit;
			slPCMOn(&m_dat[i],chunk->abuf,chunk->alen);
				break;
		}		 
	}
	
	return 1;
}
//--------------------------------------------------------------------------------------------------------------------------------------
Uint32 SDL_GetTicks(void)
{
    Uint32 tmp = TIM_FRT_CNT_TO_MCR(TIM_FRT_GET_16())+previousmillis;
    Uint32 tmp2 = tmp/ 1000;

    previouscount += tmp2;
    TIM_FRT_SET_16(0);
    previousmillis= (tmp-(tmp2*1000));
    //set_imask(imask);
    //
    return previouscount;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_Delay(long delay)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
void Pal2CRAM( Uint16 *Pal_Data , void *Col_Adr , Uint32 suu )
{
	Uint16 i;
	Uint16 *VRAM;

	VRAM = (Uint16 *)Col_Adr;

	for( i = 0; i < suu; i++ )
		*(VRAM++) = *(Pal_Data++);
}
//--------------------------------------------------------------------------------------------------------------------------------------
#ifndef ACTION_REPLAY
void InitCD()
{
	Uint32 lib_work[GFS_WORK_SIZE(MAX_OPEN) / sizeof(Uint32)];
	GfsDirTbl dirtbl; 

#ifndef ACTION_REPLAY

#ifdef VBT
CdUnlock();
#endif

//	Sint32 ret;
 
	CDC_CdInit(0x00,0x00,0x05,0x0f);
    GFS_DIRTBL_TYPE(&dirtbl) = GFS_DIR_NAME;
    GFS_DIRTBL_DIRNAME(&dirtbl) = dir_name;
    GFS_DIRTBL_NDIR(&dirtbl) = MAX_DIR;
    GFS_Init(MAX_OPEN, lib_work, &dirtbl);
#endif	    
}
//--------------------------------------------------------------------------------------------------------------------------------------
void ChangeDir(char *dirname)
{
#ifndef ACTION_REPLAY	
    Sint32 fid;
	GfsDirTbl dirtbl; 
	
    fid = GFS_NameToId((Sint8 *)dirname);

	GFS_DIRTBL_TYPE(&dirtbl) = GFS_DIR_NAME;
	GFS_DIRTBL_DIRNAME(&dirtbl) = dir_name;
	GFS_DIRTBL_NDIR(&dirtbl) = MAX_DIR;

	GFS_LoadDir(fid,&dirtbl);
//	GFS_SetDir(&dirtbl) ;
	for (;;) {
		if (GFS_SetDir(&dirtbl) == 0) {
			break;
		}				 
	}	 
#endif	
}
//--------------------------------------------------------------------------------------------------------------------------------------
Sint32 GetFileSize(int file_id)
{
#ifndef ACTION_REPLAY	
	GfsHn gfs;
	Sint32	lastsize;
    
    gfs = GFS_Open(file_id);
	GFS_GetFileInfo(gfs,(Sint32*)&file_id,(Sint32*)NULL,&lastsize,NULL);
    GFS_Close(gfs);
	return lastsize;	  
#else
    return 300;
#endif	
}

//--------------------------------------------------------------------------------------------------------------------------------------
void	InitCDBlock( void ){
    
//    InitSoundDriver();
    
    CDC_PLY_STYPE(&playdata) = CDC_PTYPE_TNO;	/* set by track number.*/
    CDC_PLY_STNO( &playdata) = 2;		/* start track number. */
    CDC_PLY_SIDX( &playdata) = 1;		/* start index number. */
    CDC_PLY_ETYPE(&playdata) = CDC_PTYPE_TNO;	/* set by track number.*/
    CDC_PLY_ETNO( &playdata) = 10;		/* start track number. */
    CDC_PLY_EIDX( &playdata) = 99;		/* start index number. */
    CDC_PLY_PMODE(&playdata) = CDC_PTYPE_NOCHG;//CDC_PM_DFL + 30;	/* Play Mode. */ // lecture en boucle
//    CDC_PLY_PMODE(&playdata) = CDC_PTYPE_NOCHG;//CDC_PM_DFL+30;//CDC_PM_DFL ;	/* Play Mode. */ // lecture unique
}
//--------------------------------------------------------------------------------------------------------------------------------------
/* Stop Music. */
void	satStopMusic( void ){
    CDC_POS_PTYPE( &posdata ) = CDC_PTYPE_DFL;	/* Stop Music. */
}
//--------------------------------------------------------------------------------------------------------------------------------------
void	satPlayMusic( Uint8 track ){
   track -= (STARTMUSIC-2);
	unsigned char *tno = (unsigned char *) 0x6000CCD;
	if (tno[0] >30)
	{
		tno[0]=0;
	}
  
//	char toto[50];
//	sprintf(toto,"start track **%d\n%d\n**new start  : %d**",tno[0],track,track+tno[0])  ;
//slPrintHex(track + tno[0],slLocate(10,8));
//	FNT_Print256_2bpp((volatile Uint8 *)SCL_VDP2_VRAM_B1,(Uint8 *)toto,84,100,2,8,9,0);

//    CDC_PLY_PMODE(&playdata) = CDC_PTYPE_NOCHG;//CDC_PM_DFL + 30;	// Play Mode. 
	CDC_POS_PTYPE( &posdata ) = CDC_PTYPE_TNO;
    CDC_PLY_STNO( &playdata ) = (Uint8) (track + tno[0]);
    CDC_PLY_ETNO( &playdata ) = (Uint8) (track + tno[0]);
    CDC_CdPlay(&playdata);
	slCDDAOn(127,127,0,0);
	slSndVolume(127);
}
//--------------------------------------------------------------------------------------------------------------------------------------
Uint16 SWAP_BYTES_16(Uint16 a) {
         return ((a >> 8) & 0x00FF) + ((a << 8) & 0xFF00);
 }

Uint32 SWAP_BYTES_32(Uint32 a) {
//return ((a >> 24) & 0x000000FF) |
//((a >>  8) & 0x0000FF00) |
//((a <<  8) & 0x00FF0000) |
//((a << 24) & 0xFF000000);
	Uint32 v;
	asm("mov %0,r1"::"r"(a):"r1");
	asm("swap.b r1,r1");
	asm("swap.w r1,r1");
	asm("swap.b r1,r1");
	asm("mov r1,%0":"=g"(v));
	return v;



}
//-------------------------------------------------------------------------------------------------------------------------------------
extern "C" {
void CSH_Purge(void *adrs, Uint32 P_size)
{
	typedef Uint32 LineX[0x10/sizeof(Uint32)];	/* CÍ 0x10 oCgPÊ */
	LineX *ptr, *end;
	Uint32 zero = 0;

	ptr = (void*)(((Uint32)adrs & 0x1fffffff) | 0x40000000);	/* LbVp[WÌæ */
	end = (void*)((Uint32)ptr + P_size - 0x10);	/* I¹|C^i-0x10 Í|XgCNgÌ×j */
	ptr = (void*)((Uint32)ptr & -sizeof(LineX));	/* CACgÉ® */
	do {
		(*ptr)[0] = zero;			/* LbVp[W */
	} while (ptr++ < end);			/* |XgCNgÍfBCXbgpÌ× */
}
}
//-------------------------------------------------------------------------------------------------------------------------------------

/*
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_mutexP(SDL_mutex *mutex)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_mutexV(SDL_mutex *mutex)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_mutex * SDL_CreateMutex(void)
{
	return NULL;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void SDL_FreeWAV(Uint8 *audio_buf)
{
	//free(audio_buf);
}
//--------------------------------------------------------------------------------------------------------------------------------------

SDL_AudioSpec * SDL_LoadWAV_RW(SDL_RWops *src, int freesrc, SDL_AudioSpec *spec, Uint8 **audio_buf, Uint32 *audio_len)
{
#ifndef ACTION_REPLAY
	Uint8 i, fileId;
	long fileSize;
    char directory[64];
	char filename[15];
	unsigned char *mem_buf;
	if(strlen(src->hidden.stdio.name)>5)
	{
		for(i=0;i<strlen(src->hidden.stdio.name);i++)
			if (src->hidden.stdio.name[i]=='/')	break;

		if(i<strlen(src->hidden.stdio.name) )
		{
			strncpy(directory,src->hidden.stdio.name,i);
			 directory[i]='\0';

			strcpy(filename,&src->hidden.stdio.name[i+1]);
		  
			i=0;
			while (directory[i])
			{
				directory[i]= toupper(directory[i]);
				i++;
			}			 
			ChangeDir(directory);

			slPrint(directory,slLocate(1,18));
			slPrint(filename,slLocate(1,19));
		}
	}
	else
		strcpy(filename,src->hidden.stdio.name);
	i=0;
	while (filename[i])
	{
		filename[i]= toupper(filename[i]);
		i++;
	}	  

	fileId = GFS_NameToId((Sint8*)filename);
	fileSize = GetFileSize(fileId);

	 if (fileSize<80000)
		mem_buf = (unsigned char*)malloc(fileSize)	;
	else if (fileSize<90000)
		mem_buf =  (Uint8 *)(0x00202000)	;
	else
		   mem_buf = (Uint8 *)(0x00232000);

	GFS_Load(fileId, 0, mem_buf, fileSize);
	audio_buf[0] = mem_buf;
	*audio_len = fileSize;
	if (fileSize<0x900)
	*audio_len = 0x900;
	ChangeDir(NULL);
		return spec;
#else

	 if(strcmp(src->hidden.stdio.name,"sounds/tune5.wav")==0)
	{
		audio_buf[0] = tune0;
		*audio_len = sizeof(tune0);
	}	  
#endif
  	//slPrint("                                    ",slLocate(2,21));
	return spec;
}
*/
/*int Mix_OpenAudio(int frequency, Uint16 format, int channels, int chunksize)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void Mix_ChannelFinished(void (*channel_finished)(int channel))
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_SetPanning(int channel, Uint8 left, Uint8 right)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_GroupAvailable(int tag)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_ReserveChannels(int num)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_GroupOldest(int tag)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_GroupChannels(int from, int to, int tag)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
void Mix_HookMusic(void (*mix_func)(void *udata, Uint8 *stream, int len),void *arg)
{

}
//--------------------------------------------------------------------------------------------------------------------------------------
char *Mix_GetError()
{
	return NULL;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int Mix_HaltChannel(int channel)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
int SDL_SaveBMP_RW (SDL_Surface *surface, SDL_RWops *dst, int freedst)
{
	return 0;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_RWops *SDL_RWFromMem(void *mem, int size)
{
	return NULL;
}
//--------------------------------------------------------------------------------------------------------------------------------------
SDL_RWops *SDL_RWFromFile(const char *file, const char *mode)
{
	return NULL;
}*/
//--------------------------------------------------------------------------------------------------------------------------------------

#ifdef VBT



int CdUnlock (void)
{

Sint32 ret;
CdcStat stat;
volatile int delay;
unsigned int vbt=0;
SYS_CDINIT1(3);

SYS_CDINIT2();

do {

for(delay = 100000; delay; delay--);

ret = CDC_GetCurStat(&stat);
} while ((ret != 0) || (CDC_STAT_STATUS(&stat) == 0xff));


return (int) CDC_STAT_STATUS(&stat);

}



#endif
#endif


 #if 0

volatile void **SPR_SlaveSHEntry
/*  = (void **)0x6000250; 			 95-7-27	*/
  = (volatile void **)0x6000250;  /* 95-7-27  BOOT ROMs dispatch address */

volatile Uint8 *SPR_SMPC_COM = (Uint8 *)0x2010001F;   /* SMPC command register */
volatile Uint8 *SPR_SMPC_RET = (Uint8 *)0x2010005f;   /* SMPC result register */
volatile Uint8 *SPR_SMPC_SF  = (Uint8 *)0x20100063;   /* SMPC status flag */

const Uint8 SPR_SMPC_SSHON  = 0x02;          /* SMPC slave SH on command */
const Uint8 SPR_SMPC_SSHOFF = 0x03;          /* SMPC slave SH off command */

typedef void PARA_RTN(void *parm);

Uint32
  *SPR_SlaveCommand  = (Uint32 *)0;          /* MASTER to SLAVE command AREA */

Uint32
  SPR_SlaveState    = (Uint32)0;             /* SLAVE to MASTER state  AREA */

Uint32
  SPR_SlaveParam    = (Uint32)0;             /* MASTER to SLAVE parameter  AREA */
 
void /* Slave SH2 main loop (RUNS on slave SH) */
  SPR_SlaveSHmain(void)
{
/*    const Uint32 RUNNING = 1;		95-7-27	unuse
    const Uint32 WAITING = 0;
*/

    /* Wait until SlaveSHReqCode is set */
    /* then call function for SlaveSHReqCode */
    set_imask(0xf);
    *(volatile Uint16 *)0xfffffee2 = 0x0000;  /* IPRA int disable */
    *(volatile Uint16 *)0xfffffe60 = 0x0000;  /* IPRB int disable */
    *(volatile Uint8 *)0xfffffe10  = 0x01;    /* TIER FRT INT disable */
    while(1){
	/* Use "FRT InputCaptureFlag" Poling for wait command from Master */
        if((*(volatile Uint8 *)0xfffffe11 & 0x80) == 0x80){
	   *(Uint8 *)0xfffffe11 = 0x00; /* FTCSR clear */
	   if((*(void (*)(void*))*(void **)((Uint32)&SPR_SlaveCommand+0x20000000)))
           {
             /* chache parse all */
             *(volatile Uint16 *)0xfffffe92 |= 0x10;
	     (*(void (*)(void*))*(void **)((Uint32)&SPR_SlaveCommand+0x20000000))
                                                         ((void*)SPR_SlaveParam);
             /* frt inp to master */
             *(volatile Uint16 *)0x21800000 = 0xffff;
	   }
	}
    }
}
 
  
void  SPR_RunSlaveSH(PARA_RTN *routine, void *parm)
{
    SPR_SlaveCommand = (Uint32*)routine;
    SPR_SlaveParam   = (Uint32)parm;
    *(volatile Uint16 *)0x21000000 = 0xffff;
}


void  SPR_WaitEndSlaveSH(void)
{
    while((*(volatile Uint8 *)0xfffffe11 & 0x80) != 0x80);
    *(volatile Uint8 *)0xfffffe11 = 0x00; /* FTCSR clear */
    *(volatile Uint16 *)0xfffffe92 |= 0x10; /* chache parse all */
}

void /* slave SH Initialize (RUNS on main SH) */
  SPR_InitSlaveSH(void)
{
    volatile Uint16 i;

    *(volatile Uint8 *)0xfffffe10  = 0x01;    /* TIER FRT INT disable */
    SPR_SlaveState = 0;                /* set RUNNING state */
    /* SlaveSH ???????????? */
    while((*SPR_SMPC_SF & 0x01) == 0x01);
    *SPR_SMPC_SF = 1;                 /* --- SMPC StatusFlag SET */
    *SPR_SMPC_COM = SPR_SMPC_SSHOFF;      /* --- Slave SH OFF SET */
    while((*SPR_SMPC_SF & 0x01) == 0x01);
    for(i = 0 ; i < 1000; i++);   /* slave reset assert length */
    *(void **)SPR_SlaveSHEntry = (void *)&SPR_SlaveSHmain; /* dispatch address set */
    /* SlaveSH ???????????? */
    *SPR_SMPC_SF = 1;                 /* --- SMPC StatusFlag SET */
    *SPR_SMPC_COM = SPR_SMPC_SSHON;       /* --- Slave SH ON SET */
    while((*SPR_SMPC_SF & 0x01) == 0x01);
}
#endif

#if 0 // code pour faire le sol
// slScrTransparent(RBG0ON); à mettre dans l'affichages des menus!!!
#define		RBG0RB_CEL_ADR			(VDP2_VRAM_A0            )	
#define		RBG0_PRA_ADR			(VDP2_VRAM_A1   + 0x1fe00)
#define		RBG0_KTB_ADR			(VDP2_VRAM_A1            )	
#define		RBG0RA_CEL_ADR			(RBG0RB_CEL_ADR + 0x14000)
#define		RBG0RA_MAP_ADR			(RBG0RB_MAP_ADR + 0x02000)
#define		RBG0RB_MAP_ADR			(VDP2_VRAM_B0            )
#define		RBG0RA_COL_ADR		( VDP2_COLRAM + 0x00200 )
#define		RBG0_PAR_ADR		( VDP2_VRAM_A1 + 0x1fe00 )

	extern Uint8 cross_cel[];
	extern Uint16 cross_map[];
	extern Uint16 cross_pal[];
	
Cel2VRAM(cross_cel, (void *)RBG0RA_CEL_ADR , 16000);	
Map2VRAM(cross_map, (void *)RBG0RA_MAP_ADR , 32 , 32 , 1 , 0);
Pal2CRAM(cross_pal, (void *)RBG0RA_COL_ADR , 256);

	slRparaInitSet((void *)RBG0_PRA_ADR);
	slMakeKtable((void *)RBG0_KTB_ADR);
    slCharRbg0(COL_TYPE_256, CHAR_SIZE_1x1);
	slPageRbg0((void*)RBG0RA_CEL_ADR , 0 , PNB_1WORD|CN_12BIT);
	slPlaneRA(PL_SIZE_1x1);
	sl1MapRA((void *)RBG0RA_MAP_ADR);
	slOverRA(0);
	slKtableRA((void *)RBG0_KTB_ADR, K_FIX | K_DOT | K_2WORD | K_ON | K_LINECOL);
	slRparaMode(K_CHANGE);


	FIXED	posy = toFIXED(0.0);
	ANGLE	angz = DEGtoANG(0.0);
	ANGLE	angz_up = DEGtoANG(0.0);
	
	slTVOn();
//---------------------------------------------------------------------------
do
{	
		slCurRpara(RA);
		slUnitMatrix(CURRENT);
		slTranslate(toFIXED(0.0) , toFIXED(0.0) + posy , toFIXED(100.0));
		posy -= toFIXED(5.0);
		slRotX(DEGtoANG(-90.0));
		slRotZ(angz);
		slScrMatSet();

//		angz_up += DEGtoANG(0.5);
//		angz = (slSin(angz_up) >> 4);

	
	slSynch();
}	
while(1);	

 void Map2VRAM( Uint16 *Map_Data , void *Map_Adr , Uint16 suuj , Uint16 suui , Uint16 palnum ,Uint32 mapoff)
{
	Uint16 i , j;
	Uint16 paloff;
	Uint16 *VRAM;

	paloff= palnum << 12;
	VRAM = (Uint16 *)Map_Adr;
	

	for( i = 0; i < suui; i++ ) {
		for( j = 0; j < suuj; j++ ) {
			*VRAM++ = (*Map_Data | paloff) + mapoff;
			Map_Data++;
		}
		VRAM += (64 - suuj);
	}
}

 
 void Cel2VRAM( Uint8 *Cel_Data , void *Cell_Adr , Uint32 suu )
{
	Uint32 i;
	Uint8 *VRAM;

	VRAM = (Uint8 *)Cell_Adr;

	for( i = 0; i < suu; i++ )
		*(VRAM++) = *(Cel_Data++);
}

	
Uint8 cross_cel[]={
/* [ 0 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 1 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x07,
0x00,0x00,0x00,0x0e,0x0f,0x0c,0x09,0x0b,

/* [ 2 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x01,0x02,0x03,0x03,0x04,0x05,0x00,
0x08,0x09,0x0a,0x0a,0x0b,0x0a,0x0c,0x09,
0x10,0x0b,0x11,0x12,0x13,0x14,0x15,0x15,

/* [ 3 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0c,0x0d,0x00,0x00,0x00,0x00,0x00,0x00,
0x15,0x0f,0x16,0x00,0x00,0x00,0x00,0x00,

/* [ 4 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,
0x00,0x00,0x00,0x00,0x00,0x00,0x2c,0x2a,
0x00,0x00,0x00,0x00,0x00,0x2f,0x0a,0x30,
0x00,0x00,0x00,0x00,0x24,0x0f,0x30,0x1b,
0x00,0x00,0x00,0x00,0x32,0x0f,0x03,0x1c,

/* [ 5 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x24,0x00,0x00,0x00,0x24,0x00,
0x28,0x04,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,
0x0b,0x0a,0x0b,0x0b,0x0b,0x0b,0x0b,0x0a,
0x1a,0x14,0x1b,0x1b,0x1b,0x1a,0x11,0x18,
0x1c,0x1c,0x1c,0x1c,0x1c,0x03,0x19,0x18,
0x1c,0x1c,0x1d,0x1c,0x1c,0x1d,0x1c,0x13,

/* [ 6 ] */
0x00,0x00,0x00,0x0f,0x07,0x14,0x13,0x17,
0x00,0x00,0x20,0x07,0x0a,0x1b,0x13,0x1a,
0x00,0x00,0x0f,0x1e,0x18,0x19,0x25,0x1a,
0x20,0x00,0x29,0x15,0x03,0x1b,0x12,0x25,
0x0b,0x1e,0x2d,0x19,0x1c,0x03,0x1a,0x12,
0x25,0x12,0x14,0x2e,0x2e,0x1c,0x03,0x18,
0x1a,0x18,0x12,0x03,0x1d,0x2e,0x03,0x1b,
0x1a,0x17,0x18,0x25,0x1c,0x1c,0x03,0x1c,

/* [ 7 ] */
0x18,0x18,0x19,0x1a,0x1b,0x03,0x1c,0x1d,
0x18,0x11,0x1c,0x1b,0x1b,0x03,0x1c,0x1b,
0x18,0x1a,0x1c,0x03,0x1b,0x1a,0x19,0x11,
0x12,0x1b,0x1c,0x1b,0x1a,0x12,0x11,0x18,
0x19,0x1b,0x1b,0x12,0x18,0x17,0x17,0x17,
0x1b,0x19,0x13,0x17,0x17,0x17,0x17,0x17,
0x1b,0x11,0x18,0x17,0x17,0x17,0x17,0x17,
0x1a,0x18,0x17,0x17,0x17,0x17,0x17,0x17,

/* [ 8 ] */
0x1c,0x1e,0x1e,0x1f,0x20,0x21,0x22,0x00,
0x1a,0x1a,0x11,0x0a,0x0a,0x1e,0x0c,0x23,
0x25,0x18,0x11,0x12,0x13,0x1a,0x1e,0x07,
0x18,0x18,0x19,0x19,0x1a,0x1b,0x03,0x1c,
0x18,0x11,0x1c,0x1b,0x1b,0x1b,0x03,0x1c,
0x17,0x11,0x1c,0x1b,0x1a,0x11,0x25,0x1c,
0x17,0x11,0x19,0x11,0x11,0x17,0x25,0x11,
0x17,0x17,0x18,0x18,0x17,0x17,0x17,0x17,

/* [ 9 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x07,0x1f,0x26,0x00,0x00,0x00,0x00,0x00,
0x2a,0x07,0x2b,0x00,0x00,0x00,0x00,0x00,
0x2e,0x15,0x0f,0x29,0x00,0x00,0x00,0x00,
0x03,0x1c,0x15,0x0f,0x31,0x00,0x00,0x00,
0x13,0x1b,0x14,0x1e,0x1c,0x28,0x00,0x00,
0x25,0x13,0x11,0x11,0x0a,0x1c,0x05,0x00,

/* [ 10 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x2d,

/* [ 11 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x36,0x00,0x00,0x00,0x00,
0x00,0x38,0x39,0x3a,0x3a,0x3b,0x16,0x00,
0x3d,0x02,0x3e,0x3f,0x3f,0x40,0x0f,0x06,
0x02,0x3f,0x3f,0x43,0x3f,0x3f,0x3b,0x35,

/* [ 12 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x31,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,
0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x04,
0x00,0x00,0x00,0x00,0x00,0x00,0x3d,0x0a,

/* [ 13 ] */
0x00,0x00,0x00,0x00,0x0f,0x15,0x1c,0x1c,
0x00,0x00,0x00,0x00,0x09,0x0b,0x1b,0x1a,
0x00,0x24,0x20,0x04,0x0b,0x10,0x18,0x11,
0x00,0x04,0x0a,0x0b,0x10,0x17,0x17,0x17,
0x37,0x0a,0x0b,0x17,0x17,0x17,0x17,0x18,
0x0f,0x30,0x17,0x17,0x17,0x17,0x17,0x11,
0x0b,0x18,0x17,0x17,0x17,0x18,0x12,0x19,
0x10,0x17,0x17,0x17,0x18,0x12,0x19,0x1b,

/* [ 14 ] */
0x1b,0x18,0x1b,0x18,0x1b,0x1c,0x1c,0x13,
0x11,0x18,0x18,0x18,0x13,0x1a,0x19,0x25,
0x18,0x18,0x18,0x18,0x18,0x11,0x25,0x18,
0x17,0x11,0x11,0x11,0x19,0x11,0x13,0x11,
0x11,0x19,0x1a,0x1b,0x1b,0x1b,0x18,0x1b,
0x1a,0x1b,0x03,0x03,0x03,0x03,0x03,0x1d,
0x1b,0x03,0x03,0x03,0x15,0x34,0x2e,0x1d,
0x03,0x03,0x03,0x1c,0x15,0x35,0x03,0x1b,

/* [ 15 ] */
0x18,0x17,0x17,0x13,0x19,0x1a,0x1a,0x19,
0x17,0x17,0x17,0x18,0x18,0x11,0x11,0x11,
0x17,0x17,0x17,0x17,0x17,0x18,0x17,0x17,
0x19,0x11,0x17,0x17,0x17,0x17,0x17,0x17,
0x19,0x12,0x17,0x17,0x17,0x17,0x17,0x17,
0x1b,0x13,0x18,0x17,0x17,0x17,0x17,0x17,
0x1b,0x25,0x17,0x17,0x17,0x17,0x17,0x17,
0x12,0x25,0x17,0x17,0x17,0x17,0x17,0x18,

/* [ 16 ] */
0x13,0x17,0x17,0x17,0x17,0x17,0x17,0x17,
0x18,0x17,0x17,0x17,0x17,0x17,0x17,0x17,
0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,
0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,
0x17,0x11,0x11,0x11,0x17,0x17,0x11,0x11,
0x18,0x11,0x19,0x11,0x11,0x11,0x19,0x11,
0x11,0x1b,0x1b,0x19,0x12,0x13,0x19,0x19,
0x13,0x15,0x15,0x03,0x12,0x13,0x1b,0x1c,

/* [ 17 ] */
0x17,0x17,0x17,0x17,0x17,0x17,0x18,0x18,
0x17,0x17,0x17,0x11,0x11,0x11,0x1a,0x1a,
0x17,0x17,0x11,0x19,0x1a,0x1c,0x1c,0x15,
0x17,0x17,0x17,0x11,0x12,0x1c,0x1d,0x15,
0x17,0x17,0x17,0x17,0x12,0x19,0x1b,0x03,
0x11,0x17,0x17,0x17,0x18,0x18,0x12,0x13,
0x13,0x17,0x17,0x17,0x17,0x18,0x17,0x18,
0x1a,0x11,0x17,0x17,0x18,0x17,0x17,0x17,

/* [ 18 ] */
0x18,0x17,0x18,0x18,0x25,0x0b,0x2a,0x03,
0x11,0x11,0x11,0x17,0x17,0x10,0x0b,0x0a,
0x03,0x14,0x1a,0x11,0x11,0x17,0x17,0x17,
0x34,0x35,0x1c,0x1b,0x1a,0x18,0x17,0x17,
0x03,0x15,0x1c,0x1c,0x1b,0x1a,0x18,0x17,
0x1a,0x1b,0x03,0x1d,0x1c,0x03,0x1a,0x11,
0x18,0x13,0x1a,0x03,0x2e,0x2e,0x15,0x14,
0x17,0x17,0x18,0x25,0x1c,0x35,0x37,0x15,

/* [ 19 ] */
0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x2a,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
0x0b,0x0a,0x04,0x20,0x00,0x00,0x00,0x00,
0x17,0x17,0x0b,0x09,0x2b,0x00,0x00,0x00,
0x17,0x17,0x25,0x30,0x0f,0x01,0x00,0x00,
0x13,0x11,0x11,0x10,0x0b,0x1f,0x00,0x00,
0x13,0x1b,0x2e,0x1a,0x41,0x09,0x42,0x00,
0x08,0x0f,0x3b,0x14,0x41,0x0a,0x2d,0x00,

/* [ 20 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x6a,0x0f,

/* [ 21 ] */
0x00,0x00,0x00,0x00,0x00,0x44,0x2d,0x02,
0x00,0x00,0x00,0x00,0x01,0x1d,0x47,0x3f,
0x00,0x00,0x00,0x01,0x2d,0x02,0x3f,0x3f,
0x00,0x00,0x00,0x1d,0x02,0x3f,0x3f,0x43,
0x00,0x28,0x2d,0x02,0x3f,0x3f,0x43,0x43,
0x44,0x2d,0x02,0x3f,0x3f,0x43,0x43,0x4c,
0x1d,0x02,0x3f,0x3f,0x43,0x43,0x4c,0x43,
0x4d,0x3f,0x3f,0x43,0x43,0x4c,0x4c,0x43,

/* [ 22 ] */
0x3f,0x3f,0x43,0x43,0x43,0x3f,0x45,0x0f,
0x3f,0x43,0x43,0x43,0x43,0x3f,0x45,0x0f,
0x43,0x43,0x4c,0x43,0x43,0x3f,0x45,0x0f,
0x43,0x43,0x43,0x43,0x3f,0x3f,0x2d,0x29,
0x4c,0x43,0x5b,0x43,0x3f,0x40,0x0f,0x5c,
0x43,0x43,0x43,0x43,0x3f,0x63,0x0f,0x2c,
0x43,0x43,0x43,0x43,0x3f,0x6b,0x0f,0x2c,
0x5b,0x43,0x43,0x43,0x3f,0x0f,0x0f,0x59,

/* [ 23 ] */
0x46,0x00,0x00,0x00,0x00,0x05,0x09,0x30,
0x20,0x00,0x00,0x00,0x00,0x48,0x0a,0x25,
0x46,0x00,0x00,0x00,0x4b,0x0f,0x0b,0x17,
0x00,0x00,0x00,0x00,0x1f,0x0a,0x25,0x17,
0x00,0x00,0x00,0x5d,0x0f,0x41,0x1a,0x17,
0x00,0x00,0x00,0x4b,0x0f,0x41,0x17,0x17,
0x00,0x00,0x00,0x6c,0x0f,0x41,0x1a,0x17,
0x00,0x00,0x00,0x6c,0x0f,0x41,0x12,0x18,

/* [ 24 ] */
0x17,0x17,0x17,0x11,0x12,0x1a,0x1b,0x03,
0x17,0x17,0x18,0x1a,0x1b,0x03,0x03,0x03,
0x17,0x18,0x12,0x1b,0x1d,0x1c,0x2a,0x1e,
0x17,0x18,0x11,0x03,0x35,0x2e,0x07,0x19,
0x17,0x18,0x1a,0x03,0x0f,0x1f,0x19,0x20,
0x17,0x18,0x1a,0x07,0x29,0x26,0x33,0x00,
0x18,0x11,0x18,0x0f,0x52,0x00,0x00,0x00,
0x19,0x18,0x1e,0x0f,0x5c,0x00,0x00,0x00,

/* [ 25 ] */
0x03,0x03,0x1c,0x1c,0x03,0x1b,0x1a,0x11,
0x03,0x19,0x2e,0x03,0x1a,0x12,0x18,0x18,
0x04,0x35,0x35,0x25,0x25,0x18,0x17,0x17,
0x22,0x2d,0x14,0x13,0x1a,0x17,0x17,0x17,
0x00,0x29,0x0a,0x41,0x17,0x17,0x17,0x25,
0x5c,0x0c,0x13,0x18,0x17,0x17,0x17,0x13,
0x2d,0x0a,0x25,0x17,0x17,0x11,0x13,0x13,
0x0f,0x0b,0x18,0x17,0x18,0x19,0x1a,0x0a,

/* [ 26 ] */
0x18,0x17,0x17,0x11,0x17,0x17,0x17,0x18,
0x17,0x18,0x11,0x19,0x11,0x17,0x17,0x25,
0x18,0x11,0x19,0x19,0x11,0x18,0x18,0x11,
0x13,0x14,0x14,0x19,0x11,0x18,0x18,0x1a,
0x1a,0x0d,0x14,0x13,0x25,0x18,0x1a,0x07,
0x14,0x64,0x15,0x13,0x25,0x12,0x07,0x3d,
0x15,0x35,0x15,0x41,0x13,0x0a,0x0f,0x47,
0x34,0x35,0x14,0x41,0x1a,0x07,0x4f,0x5f,

/* [ 27 ] */
0x13,0x35,0x37,0x03,0x10,0x10,0x35,0x2e,
0x13,0x2e,0x35,0x2e,0x15,0x15,0x2d,0x35,
0x10,0x2e,0x37,0x0f,0x4d,0x4e,0x4f,0x29,
0x15,0x0f,0x51,0x52,0x53,0x54,0x55,0x53,
0x48,0x5e,0x55,0x5f,0x60,0x4e,0x54,0x55,
0x65,0x5f,0x54,0x54,0x5f,0x66,0x54,0x67,
0x6d,0x6d,0x6e,0x55,0x6d,0x0f,0x6f,0x55,
0x54,0x6e,0x6e,0x6e,0x54,0x2d,0x0f,0x4e,

/* [ 28 ] */
0x18,0x19,0x11,0x25,0x13,0x19,0x11,0x18,
0x03,0x1b,0x1a,0x13,0x1a,0x35,0x1b,0x13,
0x2a,0x2a,0x03,0x1e,0x04,0x29,0x14,0x13,
0x56,0x0f,0x04,0x19,0x57,0x3b,0x07,0x41,
0x60,0x0f,0x06,0x61,0x00,0x48,0x0f,0x62,
0x55,0x68,0x69,0x00,0x00,0x5c,0x3d,0x07,
0x67,0x70,0x71,0x00,0x00,0x26,0x2b,0x0f,
0x55,0x6d,0x72,0x73,0x00,0x00,0x05,0x4b,

/* [ 29 ] */
0x17,0x17,0x1a,0x25,0x18,0x0f,0x16,0x3b,
0x17,0x17,0x17,0x25,0x41,0x0f,0x06,0x22,
0x18,0x17,0x17,0x1a,0x41,0x0f,0x06,0x00,
0x12,0x19,0x11,0x25,0x25,0x0c,0x58,0x00,
0x14,0x15,0x1a,0x25,0x25,0x1e,0x5c,0x00,
0x58,0x32,0x2e,0x13,0x25,0x0b,0x56,0x6a,
0x4a,0x3b,0x1e,0x13,0x25,0x41,0x0f,0x5d,
0x33,0x0f,0x1e,0x1a,0x11,0x41,0x0f,0x46,

/* [ 30 ] */
0x0f,0x3b,0x16,0x0f,0x1a,0x0b,0x35,0x00,
0x2b,0x49,0x4a,0x0f,0x1b,0x41,0x1e,0x4b,
0x50,0x00,0x05,0x0f,0x1e,0x13,0x07,0x42,
0x00,0x00,0x59,0x2d,0x0f,0x30,0x0f,0x5a,
0x00,0x00,0x00,0x2f,0x29,0x07,0x29,0x31,
0x00,0x00,0x00,0x28,0x02,0x0f,0x0f,0x00,
0x00,0x00,0x00,0x00,0x59,0x42,0x0f,0x00,
0x00,0x00,0x00,0x00,0x00,0x46,0x39,0x00,

/* [ 31 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x95,

/* [ 32 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x74,0x3d,
0x00,0x00,0x00,0x00,0x00,0x28,0x29,0x78,
0x00,0x00,0x00,0x00,0x7e,0x35,0x02,0x3f,
0x00,0x00,0x00,0x7e,0x35,0x4d,0x3f,0x3f,
0x00,0x00,0x7e,0x2d,0x02,0x3f,0x3f,0x43,
0x00,0x28,0x29,0x78,0x3f,0x3f,0x43,0x43,
0x7e,0x35,0x02,0x3f,0x3f,0x43,0x43,0x4c,
0x0f,0x45,0x3f,0x3f,0x43,0x43,0x4c,0x43,

/* [ 33 ] */
0x3f,0x3f,0x43,0x43,0x4c,0x4c,0x43,0x43,
0x3f,0x43,0x43,0x4c,0x4c,0x43,0x43,0x43,
0x3f,0x43,0x4c,0x4c,0x43,0x43,0x5b,0x43,
0x43,0x43,0x43,0x43,0x43,0x43,0x43,0x43,
0x4c,0x4c,0x43,0x5b,0x43,0x43,0x43,0x43,
0x4c,0x4c,0x43,0x43,0x43,0x43,0x5b,0x43,
0x4c,0x43,0x43,0x43,0x43,0x43,0x43,0x43,
0x43,0x43,0x43,0x5b,0x43,0x43,0x43,0x43,

/* [ 34 ] */
0x43,0x43,0x43,0x3f,0x3f,0x0f,0x37,0x00,
0x43,0x5b,0x43,0x3f,0x3f,0x0f,0x1d,0x00,
0x43,0x43,0x43,0x3f,0x7f,0x0f,0x1d,0x00,
0x43,0x43,0x43,0x3f,0x64,0x0f,0x42,0x00,
0x43,0x5b,0x3f,0x3f,0x0f,0x0f,0x05,0x00,
0x43,0x43,0x3f,0x3f,0x0f,0x0f,0x00,0x00,
0x43,0x43,0x3f,0x3f,0x0f,0x0f,0x00,0x00,
0x43,0x43,0x3f,0x96,0x0f,0x0f,0x00,0x00,

/* [ 35 ] */
0x00,0x00,0x00,0x6c,0x0f,0x41,0x12,0x11,
0x00,0x00,0x00,0x6c,0x0f,0x41,0x41,0x19,
0x00,0x00,0x00,0x46,0x0f,0x41,0x41,0x1e,
0x00,0x00,0x00,0x28,0x3d,0x0a,0x41,0x1e,
0x00,0x00,0x00,0x00,0x5a,0x0f,0x41,0x0a,
0x00,0x00,0x00,0x00,0x90,0x0f,0x41,0x30,
0x00,0x00,0x00,0x00,0x26,0x2d,0x0a,0x41,
0x00,0x00,0x00,0x00,0x00,0x2c,0x0c,0x30,

/* [ 36 ] */
0x35,0x03,0x0f,0x37,0x00,0x00,0x00,0x16,
0x32,0x04,0x0f,0x79,0x00,0x00,0x00,0x64,
0x16,0x33,0x3d,0x73,0x00,0x00,0x59,0x2b,
0x37,0x00,0x5d,0x86,0x00,0x00,0x5a,0x0f,
0x37,0x00,0x00,0x00,0x00,0x00,0x5a,0x0c,
0x2b,0x00,0x00,0x00,0x00,0x00,0x5a,0x0f,
0x0c,0x90,0x00,0x00,0x00,0x00,0x57,0x0f,
0x0f,0x5a,0x00,0x00,0x00,0x00,0x00,0x35,

/* [ 37 ] */
0x0f,0x41,0x17,0x25,0x1a,0x1c,0x03,0x07,
0x0a,0x25,0x17,0x25,0x1b,0x35,0x03,0x0f,
0x30,0x1a,0x17,0x25,0x0a,0x2d,0x1f,0x0f,
0x41,0x17,0x17,0x41,0x14,0x29,0x33,0x87,
0x41,0x17,0x17,0x12,0x14,0x0f,0x00,0x8d,
0x41,0x17,0x25,0x1a,0x15,0x0f,0x27,0x00,
0x0b,0x25,0x25,0x1a,0x35,0x0f,0x32,0x00,
0x0a,0x25,0x25,0x1a,0x0f,0x32,0x0f,0x00,

/* [ 38 ] */
0x4a,0x16,0x62,0x13,0x35,0x0f,0x65,0x54,
0x20,0x5a,0x08,0x03,0x0f,0x64,0x6d,0x55,
0x31,0x48,0x0c,0x09,0x0f,0x80,0x81,0x55,
0x00,0x20,0x0f,0x0f,0x88,0x5e,0x81,0x6e,
0x00,0x26,0x3b,0x52,0x7a,0x32,0x6e,0x6e,
0x00,0x00,0x5d,0x46,0x00,0x39,0x72,0x70,
0x00,0x00,0x6a,0x00,0x00,0x73,0x79,0x7c,
0x00,0x00,0x00,0x00,0x00,0x00,0x97,0x6c,

/* [ 39 ] */
0x6e,0x6e,0x6e,0x55,0x54,0x6f,0x75,0x39,
0x6e,0x6e,0x6e,0x6e,0x6d,0x1d,0x7a,0x7b,
0x6e,0x6e,0x6e,0x54,0x82,0x0f,0x00,0x00,
0x6e,0x6e,0x55,0x6d,0x89,0x34,0x00,0x00,
0x6e,0x6d,0x6d,0x6e,0x64,0x8e,0x00,0x00,
0x70,0x70,0x82,0x91,0x8a,0x00,0x00,0x00,
0x4d,0x4d,0x4d,0x2c,0x73,0x00,0x00,0x00,
0x4b,0x4b,0x92,0x98,0x00,0x00,0x00,0x00,

/* [ 40 ] */
0x76,0x55,0x77,0x51,0x6c,0x00,0x00,0x00,
0x47,0x6e,0x55,0x77,0x7c,0x7d,0x00,0x00,
0x1d,0x83,0x55,0x77,0x6d,0x51,0x84,0x00,
0x8a,0x47,0x77,0x8b,0x8b,0x8c,0x32,0x00,
0x73,0x85,0x3b,0x76,0x8b,0x8b,0x8f,0x84,
0x00,0x7e,0x2d,0x72,0x77,0x8b,0x6d,0x70,
0x00,0x00,0x93,0x94,0x71,0x55,0x77,0x77,
0x00,0x00,0x01,0x06,0x3b,0x55,0x8b,0x77,

/* [ 41 ] */
0x49,0x0f,0x2a,0x1d,0x19,0x41,0x0f,0x5d,
0x00,0x42,0x1c,0x35,0x0a,0x41,0x0f,0x59,
0x00,0x85,0x5d,0x3d,0x08,0x1e,0x5e,0x00,
0x00,0x31,0x00,0x3d,0x2a,0x0f,0x5c,0x00,
0x00,0x00,0x00,0x37,0x0f,0x0f,0x33,0x00,
0x92,0x00,0x00,0x20,0x0f,0x32,0x00,0x00,
0x70,0x84,0x8d,0x00,0x0f,0x7b,0x00,0x00,
0x6d,0x4f,0x7e,0x00,0x92,0x28,0x00,0x00,

/* [ 42 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x73,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 43 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,
0x00,0x00,0x00,0x00,0x00,0x00,0x74,0x42,
0x00,0x00,0x00,0x00,0x00,0x38,0x1d,0x78,
0x00,0x00,0x00,0x00,0x38,0x29,0x78,0x3f,
0x00,0x00,0x00,0x38,0x29,0x78,0x3f,0x3f,
0x00,0x00,0x74,0x29,0x78,0x3f,0x3f,0x43,
0x00,0xa1,0x2d,0x45,0x3f,0x3f,0x43,0x4c,
0x74,0x0f,0x60,0x3f,0x3f,0x43,0x43,0x4c,

/* [ 44 ] */
0x0f,0x3f,0x3f,0x43,0x43,0x4c,0x43,0x43,
0x45,0x3f,0x43,0x43,0x4c,0x43,0x43,0x5b,
0x3f,0x3f,0x43,0x43,0x43,0x43,0x43,0x43,
0x3f,0x43,0x43,0x43,0x5b,0x43,0x43,0x43,
0x43,0x4c,0x4c,0x43,0x43,0x43,0x43,0x43,
0x4c,0x4c,0x4c,0x4c,0x43,0x43,0x3f,0x3a,
0x4c,0x4c,0x4c,0x43,0x43,0x3f,0x40,0x32,
0x4c,0x4c,0x4c,0x43,0x3f,0x3f,0x1d,0x0f,

/* [ 45 ] */
0x43,0x5b,0x43,0x43,0x43,0x43,0x43,0x5b,
0x43,0x43,0x43,0x43,0x43,0x43,0x43,0x43,
0x43,0x43,0x43,0x43,0x5b,0x43,0x43,0x43,
0x43,0x4c,0x4c,0x43,0x43,0x43,0x43,0x5b,
0x43,0x43,0x43,0x43,0x43,0x43,0x43,0x43,
0x3f,0x43,0x43,0x43,0x5b,0x43,0x43,0x43,
0x40,0x3f,0x43,0x43,0x43,0x43,0x43,0x43,
0x96,0x3f,0x43,0x43,0x43,0x43,0x43,0x43,

/* [ 46 ] */
0x43,0x43,0x3f,0x6f,0x0f,0x0f,0x00,0x00,
0x43,0x43,0x3f,0x42,0x0f,0x9a,0x00,0x00,
0x43,0x3f,0x3f,0x37,0x0f,0x00,0x00,0x00,
0x43,0x3f,0x3f,0x37,0x0f,0x00,0x00,0x00,
0x43,0x3f,0x3f,0x37,0x0f,0x00,0x00,0x00,
0x63,0x3f,0x3f,0x37,0x0f,0x00,0x00,0x00,
0x43,0x3f,0x3f,0x37,0x0f,0x00,0x00,0x00,
0x43,0x3f,0x40,0x0f,0x0f,0x00,0x00,0x00,

/* [ 47 ] */
0x00,0x00,0x00,0x00,0x00,0x73,0x2c,0x07,
0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x0d,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9e,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 48 ] */
0x0f,0x46,0x00,0x00,0x00,0x00,0x00,0x32,
0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x20,
0x69,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 49 ] */
0x0f,0x41,0x25,0x1a,0x0f,0x5d,0x2c,0x00,
0x0f,0x13,0x41,0x1a,0x0f,0x21,0x00,0x00,
0x37,0x1e,0x12,0x08,0x07,0x0f,0x00,0x00,
0x2f,0x2b,0x07,0x12,0x1e,0x0f,0x00,0x00,
0x00,0x05,0x0f,0x1e,0x2a,0x0f,0x00,0x00,
0x00,0x00,0x1d,0x14,0x07,0x0f,0x00,0x00,
0x00,0x00,0x7b,0xa2,0x2d,0x0f,0x00,0x00,
0x00,0x00,0x86,0x28,0x84,0x16,0x00,0x00,

/* [ 50 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x36,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 51 ] */
0x99,0x99,0x36,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 52 ] */
0x00,0x00,0x00,0x7e,0x35,0x72,0x55,0x77,
0x00,0x00,0x00,0x8d,0x16,0x3b,0x55,0x8b,
0x00,0x00,0x00,0x00,0x7e,0x35,0x5f,0x55,
0x00,0x00,0x00,0x00,0x8d,0x16,0x68,0x77,
0x00,0x00,0x00,0x00,0x00,0x74,0x39,0x47,
0x00,0x00,0x00,0x00,0x00,0x99,0x7e,0x2d,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa3,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7a,

/* [ 53 ] */
0x55,0x70,0x58,0x00,0x00,0x00,0x00,0x00,
0x77,0x55,0x94,0x9b,0x00,0x00,0x00,0x00,
0x77,0x77,0x6e,0x60,0x44,0x00,0x00,0x00,
0x55,0x77,0x76,0x70,0x29,0x00,0x00,0x00,
0x76,0x77,0x67,0x76,0x0f,0x00,0x01,0x85,
0x5f,0x67,0x67,0x53,0x0f,0x35,0xa0,0x3a,
0x4f,0x67,0x54,0x0f,0x0f,0x6b,0x3f,0x3f,
0x29,0x6d,0x02,0x0f,0x6b,0x3f,0x3f,0x43,

/* [ 54 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x3c,0x9c,0x9d,0x9d,0x7d,
0x7d,0x9f,0x85,0x39,0x3a,0x3a,0x3a,0x3e,
0x39,0x3a,0x3e,0x3f,0x3f,0x3f,0x3f,0x3f,
0x3f,0x3f,0x3f,0x43,0x43,0x43,0x43,0x43,
0x43,0x43,0x43,0x43,0x4c,0x4c,0x4c,0x4c,
0x43,0x43,0x43,0x4c,0x4c,0x4c,0x4c,0x4c,

/* [ 55 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x39,0x57,0x57,0x98,0x00,0x00,0x00,0x00,
0x3f,0x3e,0x39,0x4d,0x58,0x98,0x00,0x00,
0x43,0x3f,0x3f,0x3f,0x35,0x8a,0x00,0x00,
0x43,0x43,0x43,0x3f,0x40,0x0f,0x59,0x00,
0x4c,0x4c,0x43,0x3f,0x3f,0x64,0x0f,0x00,

/* [ 56 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,
0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x29,
0x00,0x00,0x00,0x00,0x00,0xa5,0x42,0x78,
0x00,0x00,0x00,0x00,0xa5,0x37,0x40,0x3f,
0x00,0x00,0x00,0x79,0x3d,0x40,0x3f,0x3f,
0x00,0x00,0x21,0x0f,0x48,0x3f,0x3f,0xa8,
0x00,0x06,0x0f,0x52,0xab,0x3f,0xac,0xac,

/* [ 57 ] */
0x0f,0x1d,0x96,0x3f,0x43,0x43,0x43,0x43,
0x3d,0x3f,0x3f,0x3f,0x43,0x43,0x43,0x43,
0x40,0x3f,0x3f,0x7f,0x7f,0x7f,0x7f,0x7f,
0x3f,0x3f,0x7f,0x7f,0x3e,0x7f,0x7f,0x7f,
0x3f,0x7f,0x7f,0x3e,0x3e,0x3e,0x7f,0x3f,
0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x7f,0x3f,
0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3f,0x3f,
0xac,0xac,0xac,0xac,0xac,0x96,0x96,0xa8,

/* [ 58 ] */
0x43,0x43,0x43,0x3f,0x3f,0xa4,0x0f,0x1d,
0x63,0x43,0x3f,0x3f,0x40,0x6f,0x0f,0x37,
0x7f,0x3f,0x3f,0x40,0x6f,0x0f,0x0f,0x32,
0x3f,0x3f,0xa6,0x42,0x35,0x0f,0x0f,0x45,
0x3f,0x40,0x42,0x0f,0x22,0x29,0x0f,0x3f,
0x40,0x37,0x0f,0x79,0x00,0x3d,0x0f,0x3f,
0x64,0x0f,0x29,0x00,0x00,0x0f,0x0f,0x3f,
0x0f,0x0f,0x84,0x00,0x00,0x0f,0x0f,0x3f,

/* [ 59 ] */
0x3f,0x3f,0x43,0x43,0x43,0x43,0x43,0x43,
0x3f,0x3f,0x43,0x43,0x63,0x3f,0x3f,0x63,
0x3f,0x3f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,
0x3f,0x7f,0x7f,0x3e,0x3e,0x3e,0x3e,0x7f,
0x3f,0x7f,0x3e,0x3e,0x3e,0x3e,0x3e,0x7f,
0x3f,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,
0x3f,0xa8,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,
0x3e,0xac,0xac,0xac,0xac,0xac,0xac,0xac,

/* [ 60 ] */
0x43,0x3f,0x6b,0x0f,0x29,0x00,0x00,0x00,
0x3f,0x3f,0x6b,0x0f,0x05,0x00,0x00,0x00,
0x3f,0x3f,0x6b,0x0f,0x3c,0x00,0x00,0x00,
0x7f,0x3f,0x6b,0x0f,0x59,0x00,0x00,0x00,
0x3f,0x3f,0x6b,0x0f,0x59,0x00,0x00,0x00,
0x3e,0x3f,0x6b,0x0f,0x59,0x00,0x00,0x00,
0x3e,0x3f,0x6f,0x0f,0x59,0x00,0x00,0x00,
0xa8,0x3f,0x6b,0x0f,0x59,0x00,0x00,0x00,

/* [ 61 ] */
0x00,0x00,0x00,0x00,0x28,0x73,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa9,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4b,

/* [ 62 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x35,0x4d,0x3a,0x4d,0x29,
0x00,0x00,0x1d,0x5e,0x3e,0x3f,0x3f,0x0f,
0x00,0x52,0x32,0x96,0x3f,0x3f,0x3f,0x29,
0x1d,0x32,0x96,0x3f,0x3e,0x3e,0x3f,0x45,
0x1d,0x96,0x3f,0xac,0xa8,0xa8,0x3f,0xab,

/* [ 63 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0f,0x74,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 64 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x28,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,
0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x0f,
0x00,0x00,0x36,0x00,0x00,0x00,0x0f,0x0f,

/* [ 65 ] */
0x35,0x51,0x0f,0x6b,0x3f,0x3f,0x43,0x43,
0x5c,0x0f,0x0f,0x3f,0x3f,0x43,0x43,0x43,
0x9a,0x0f,0x53,0x3f,0x3f,0x3f,0x3f,0x3f,
0x79,0x0f,0x96,0x3f,0x3f,0x3e,0x40,0x6b,
0x2d,0x45,0x3f,0x3f,0x3f,0x45,0x48,0x3b,
0x35,0x3f,0x3f,0x3f,0x45,0x35,0x0f,0x53,
0xa4,0x3f,0x3f,0x45,0x42,0xaa,0x80,0x54,
0x4c,0xa4,0x45,0x0f,0x37,0x4e,0x55,0x8b,

/* [ 66 ] */
0x43,0x43,0x43,0x43,0x43,0x43,0x43,0x43,
0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x43,
0x96,0x60,0x6b,0x6b,0x60,0x40,0x3f,0x7f,
0x6f,0x0f,0xa7,0x52,0x0f,0x48,0x40,0x3f,
0x35,0x0f,0x98,0x6c,0x1d,0x0f,0x6f,0x3f,
0x80,0x29,0x00,0x00,0x74,0x75,0x0f,0x3f,
0x6e,0x0f,0x00,0x00,0x00,0x7a,0x29,0x3f,
0x76,0x2d,0x00,0x00,0x00,0x31,0x0f,0x3f,

/* [ 67 ] */
0x43,0x43,0x43,0x43,0x3f,0x96,0x0f,0x4b,
0x43,0x43,0x43,0x43,0x3f,0x3f,0x42,0x0f,
0x7f,0x7f,0x7f,0x63,0x3f,0x3f,0x1d,0x0f,
0x7f,0x7f,0x7f,0x7f,0x3f,0x3f,0x35,0x0f,
0x3f,0x7f,0x7f,0x3f,0x3f,0x45,0x0f,0x0f,
0x3f,0x3e,0x7f,0x3f,0x3f,0x3b,0x0f,0x20,
0x3e,0x81,0x3e,0x3f,0x45,0x0f,0x0f,0x00,
0x3e,0xa8,0xa8,0x3f,0xa0,0x0f,0x79,0x00,

/* [ 68 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5c,
0x00,0x00,0x00,0x00,0x00,0x00,0x93,0x3d,
0x00,0x00,0x00,0x00,0x00,0x79,0x0f,0x68,
0x00,0x00,0x00,0x00,0x5c,0x0f,0x68,0xad,
0x00,0x00,0x00,0x93,0x0f,0x68,0xab,0xa6,
0x00,0x00,0x00,0x35,0x3b,0x6e,0x55,0x6e,

/* [ 69 ] */
0x00,0x0f,0x52,0xab,0x96,0xac,0xad,0xad,
0x79,0x37,0xa8,0xa4,0xad,0xad,0xab,0xab,
0x64,0xac,0xab,0xab,0x55,0xab,0x55,0xab,
0x65,0xaf,0x54,0x54,0x54,0x54,0x54,0x54,
0x43,0x54,0x54,0xb0,0xb0,0xb0,0xb0,0x54,
0xaf,0xb0,0xb0,0xb0,0xb0,0xb0,0xb0,0xb0,
0x76,0x76,0x76,0x76,0x76,0x76,0x76,0xb0,
0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x55,0x55,

/* [ 70 ] */
0xad,0xad,0xad,0xad,0xad,0xa4,0x5f,0x35,
0xab,0xab,0xad,0xad,0xa4,0x45,0x35,0x0f,
0x55,0x55,0xab,0x4c,0x5f,0x37,0x0f,0x5a,
0x54,0x54,0xab,0xb0,0x37,0x0f,0x0f,0x95,
0x54,0xb0,0xa6,0xb2,0x0f,0x0f,0x5c,0x6a,
0xaf,0x5b,0x72,0x35,0x0f,0x85,0x50,0x00,
0xa6,0x77,0x0f,0x0f,0x5c,0x50,0x00,0x00,
0x77,0x0f,0x0f,0x79,0x00,0x00,0x00,0x00,

/* [ 71 ] */
0x0f,0x5c,0x00,0x00,0x00,0x0f,0x4f,0x3f,
0x5c,0x28,0x00,0x00,0x20,0x0f,0xa8,0x96,
0x31,0x00,0x00,0x00,0x37,0x0f,0x4c,0xab,
0x00,0x00,0x00,0x00,0x1d,0x0f,0xac,0xab,
0x00,0x00,0x00,0x00,0x1d,0x0f,0xaf,0xab,
0x00,0x00,0x00,0x00,0x1d,0x0f,0xac,0xaf,
0x00,0x00,0x00,0x00,0x1d,0x0f,0xad,0xb0,
0x00,0x00,0x00,0x00,0x1d,0x0f,0x81,0x76,

/* [ 72 ] */
0xac,0xad,0xad,0xad,0xad,0xad,0xad,0xad,
0xad,0xab,0xab,0xab,0xab,0xab,0xab,0xad,
0x55,0x55,0xab,0x55,0x55,0xab,0x55,0x55,
0x54,0x54,0x54,0x54,0x54,0x54,0x54,0x54,
0x6d,0xb0,0xb0,0xb0,0xb0,0xb0,0xb0,0x54,
0xb0,0xb0,0xb0,0xb0,0xb0,0xb0,0xb0,0xb0,
0x76,0x76,0x76,0x76,0x76,0x76,0x76,0x76,
0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,

/* [ 73 ] */
0xac,0x3f,0x6b,0x0f,0x59,0x00,0x00,0x00,
0xad,0x3f,0x6f,0x0f,0x59,0x00,0x00,0x00,
0xad,0x3f,0x6f,0x0f,0x59,0x00,0x00,0x00,
0x55,0xa4,0x39,0x0f,0x59,0x00,0x00,0x00,
0x54,0xab,0x39,0x0f,0x59,0x00,0x00,0x00,
0x54,0x43,0x39,0x0f,0x59,0x00,0x00,0x00,
0x6d,0xaf,0x02,0x0f,0x59,0x00,0x00,0x00,
0x76,0xa6,0x89,0x0f,0x59,0x00,0x00,0x00,

/* [ 74 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x42,
0x00,0x00,0x00,0x00,0x00,0x01,0x2d,0x80,
0x00,0x00,0x00,0x00,0x44,0x1d,0x4d,0x4c,
0x00,0x00,0x00,0x31,0x1d,0x83,0xaf,0xad,
0x00,0x00,0x73,0x35,0x83,0x5b,0xad,0x39,
0x00,0x00,0x79,0x3d,0x5b,0x5b,0x51,0x3d,
0x00,0x28,0x35,0x5f,0x5b,0x81,0x3d,0x0f,
0x7e,0x2d,0x8f,0x55,0x76,0x80,0x0f,0x0f,

/* [ 75 ] */
0xab,0x96,0xad,0xad,0xac,0xac,0x3f,0xa0,
0x3f,0x81,0xae,0xab,0xad,0xad,0x3f,0x0f,
0xac,0x42,0xa8,0xab,0x55,0xa4,0xa8,0x0f,
0x64,0x0f,0xac,0x54,0x54,0xaf,0x4f,0x0f,
0x0f,0x6f,0xaf,0x54,0x54,0x5b,0x2d,0x0f,
0x0f,0xb2,0xaf,0x54,0xaf,0x6d,0x0f,0x79,
0x0f,0x77,0xaf,0xb0,0x5b,0x89,0x0f,0x28,
0x64,0x81,0x76,0x6e,0xa6,0xa7,0x0f,0x00,

/* [ 76 ] */
0x0f,0x5d,0x00,0x00,0x00,0x00,0x00,0x21,
0x0f,0x00,0x00,0x00,0x00,0x7e,0x2d,0x72,
0x35,0x00,0x00,0x00,0x7e,0x2d,0x7c,0x4c,
0x27,0x00,0x00,0x7e,0x2d,0x71,0xaf,0x67,
0x00,0x00,0x74,0x2d,0x71,0x5b,0x5f,0x4e,
0x00,0x00,0x58,0x83,0x5b,0xad,0x0f,0x4d,
0x00,0x38,0x5e,0xa6,0x5b,0x42,0x0f,0x76,
0x00,0x2d,0x70,0x81,0x76,0x0f,0x2d,0x55,

/* [ 77 ] */
0x2d,0x4e,0x3a,0x4d,0xa5,0x00,0x3d,0x0f,
0x81,0x96,0x3f,0x45,0x35,0x00,0x61,0x58,
0xab,0x55,0xad,0xa4,0x32,0x35,0x00,0x00,
0x54,0x55,0x55,0x4c,0x39,0x0f,0x28,0x00,
0xb0,0x54,0xab,0xac,0x2d,0x3d,0x00,0x00,
0xaf,0x54,0xaf,0x5f,0x0f,0xb1,0x00,0x00,
0xb0,0xb0,0xad,0x37,0x0f,0x6c,0x00,0x00,
0x76,0x76,0x76,0x0f,0x0f,0x6c,0x00,0x00,

/* [ 78 ] */
0x5f,0xa0,0x39,0x0f,0x5f,0x67,0x8b,0x8b,
0x35,0x42,0x21,0x0f,0x76,0x67,0x77,0x77,
0x06,0x46,0x00,0x0f,0x6e,0x8b,0x77,0x77,
0x00,0x00,0x00,0x0f,0x89,0x67,0x77,0x77,
0x00,0x00,0x00,0x0f,0x0f,0x67,0x55,0x77,
0x00,0x00,0x00,0x16,0x0f,0x54,0x8b,0x77,
0x00,0x00,0x00,0x5c,0x0f,0x80,0x80,0x02,
0x00,0x00,0x00,0x16,0x0f,0xa7,0x0d,0x34,

/* [ 79 ] */
0x55,0x3b,0x79,0x00,0x00,0x3c,0x0f,0x3f,
0x67,0x68,0x0f,0x00,0x00,0x2d,0x29,0x3f,
0x55,0x77,0x2d,0x00,0x00,0x0f,0x71,0xa4,
0x55,0x55,0x29,0xb1,0x00,0x29,0xb0,0xab,
0x55,0x67,0x80,0x66,0x87,0x4e,0xb0,0x54,
0x8b,0x8b,0x0d,0x0f,0x70,0xac,0xaf,0xb0,
0x80,0xa7,0x0f,0x2d,0x76,0x5b,0xb0,0xa6,
0x0f,0x0f,0xa7,0x5f,0x55,0x76,0x55,0xb3,

/* [ 80 ] */
0xac,0xac,0x96,0xa4,0x2d,0x29,0x24,0x00,
0xac,0xad,0xa4,0x5f,0x0f,0x79,0x00,0x00,
0xad,0xab,0x45,0x35,0x0f,0x28,0x00,0x00,
0x55,0xaf,0x52,0x0f,0x79,0x00,0x00,0x00,
0xaf,0x6d,0x0f,0x2d,0x00,0x00,0x00,0x00,
0x5b,0x3b,0x0f,0x06,0x00,0x00,0x00,0x00,
0xb2,0x3d,0x0f,0x20,0x00,0x00,0x00,0x00,
0x0f,0x66,0x2d,0x2c,0x00,0x00,0x00,0x00,

/* [ 81 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x9b,0x73,0x31,0x48,
0xb4,0x7b,0x5d,0x9a,0x52,0xb5,0x65,0x65,

/* [ 82 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x31,0x00,0x00,0x58,0x4f,0x78,0x78,0x78,
0x89,0x4e,0x6e,0x4e,0x65,0xaf,0xb0,0x8c,
0xa6,0xa6,0xa6,0x81,0x77,0x77,0x72,0xa7,

/* [ 83 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x71,0xb2,0x70,0x3d,0x0f,0x69,0x00,0x00,
0x4f,0x51,0x80,0x0f,0x52,0x50,0x00,0x00,
0x0f,0x16,0x35,0x0f,0x5a,0x00,0x00,0x00,

/* [ 84 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x86,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 85 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x58,
0x00,0x00,0x00,0x00,0x00,0x00,0x16,0x0f,
0x00,0x00,0x00,0x00,0x00,0x79,0x0f,0x91,
0x00,0x00,0x00,0x00,0x00,0x56,0x94,0xc7,
0x00,0x00,0x00,0x8d,0x58,0x32,0xcc,0xcc,

/* [ 86 ] */
0x00,0x00,0x58,0x47,0x6e,0x55,0x6e,0x6e,
0x00,0x34,0x3b,0x6e,0x54,0x55,0x6e,0x6e,
0x16,0x29,0x6d,0x6d,0x6d,0x6d,0x6d,0x6d,
0x0f,0x94,0x76,0xc6,0xc6,0xc6,0xc6,0xc6,
0x91,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 87 ] */
0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x55,0x72,
0x6e,0x6e,0x6e,0x6e,0x6e,0x54,0x54,0x35,
0x6d,0x6d,0x6d,0x6d,0x6d,0x6d,0x7c,0x0f,
0xc6,0xc6,0xc6,0xc6,0xc7,0x53,0x0f,0x2d,
0xc7,0xc7,0xc7,0xc7,0x53,0x0f,0x0f,0x38,
0xc7,0xc7,0xc7,0x5f,0x1d,0x0f,0x64,0x00,
0xc7,0xc7,0xc7,0x39,0x0f,0x0f,0x05,0x00,
0xcc,0xcc,0x7c,0x1c,0x0f,0x0f,0x97,0x00,

/* [ 88 ] */
0x1d,0x0f,0x0f,0x28,0x00,0x00,0x00,0x00,
0x0f,0x2d,0x9a,0x00,0x00,0x00,0x00,0x00,
0x2d,0x20,0x6a,0x00,0x00,0x00,0x00,0x00,
0x21,0x6a,0x00,0x00,0x00,0x00,0x00,0x00,
0x6a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xba,0x00,

/* [ 89 ] */
0x00,0x00,0x00,0x00,0x3d,0xb3,0x55,0x6e,
0x00,0x00,0x00,0x79,0x0f,0x76,0x55,0x6e,
0x00,0x00,0x00,0x2c,0x0f,0x5f,0x54,0x6d,
0x00,0x00,0x00,0x2c,0x0f,0x5f,0x6d,0xc6,
0x00,0x00,0x00,0x5c,0x0f,0x5f,0xc7,0xc7,
0x00,0x00,0x00,0x06,0x0f,0xc6,0xc7,0xc7,
0x00,0x00,0x00,0x5a,0x0f,0x5f,0xc7,0xc7,
0x00,0x00,0x23,0x0f,0x0f,0xb9,0xcc,0xcc,

/* [ 90 ] */
0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,
0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,0x6e,
0x6d,0x6d,0x6d,0x6d,0x6d,0x6d,0x6d,0x6d,
0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 91 ] */
0x6e,0x81,0x89,0x0f,0x59,0x00,0x00,0x00,
0x6e,0x81,0x02,0x0f,0x59,0x00,0x00,0x00,
0x6d,0x54,0x6f,0x0f,0x59,0x00,0x00,0x00,
0xc6,0x6d,0x6f,0x0f,0x59,0x00,0x00,0x00,
0xc7,0xc7,0x68,0x0f,0x61,0x00,0xd1,0x79,
0xc7,0x76,0x5e,0x0f,0xd1,0x59,0x16,0xbc,
0xc7,0xc7,0x68,0x0f,0x38,0x8e,0xb7,0xc1,
0xcc,0xcc,0x5e,0x0f,0x7d,0xc1,0xc1,0xbb,

/* [ 92 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x26,0x95,
0x92,0x98,0xd2,0x95,0x33,0x9e,0x87,0x0f,
0xbc,0xb6,0xb6,0xc0,0xcf,0xb6,0xb7,0xb7,
0xc1,0xc1,0xc1,0xb7,0xb7,0xb7,0xb7,0xb7,
0xbb,0xbb,0xbb,0xbb,0xbb,0xbb,0xc2,0xc2,

/* [ 93 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa1,
0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x0f,
0x33,0x27,0x50,0x6a,0x31,0x38,0x32,0x8f,
0xd3,0xbe,0xb8,0xc0,0x0f,0x0f,0xcc,0xc7,
0xb7,0x36,0x36,0x34,0x0f,0x6f,0xc7,0x76,
0xb4,0xc1,0xc4,0x0f,0x52,0xc7,0xc7,0xc6,
0xc1,0xb6,0x09,0x4f,0xcc,0xcc,0xe1,0x35,

/* [ 94 ] */
0x2d,0x83,0x81,0x55,0x80,0x29,0x0f,0x0f,
0xb5,0x54,0x55,0x5e,0x0f,0x0f,0x0f,0x29,
0x6e,0xa8,0x72,0x0f,0x34,0xbe,0x0f,0x1d,
0x76,0xc6,0x52,0x0f,0xc1,0x99,0x0f,0x52,
0xc6,0x35,0x3d,0xcf,0x99,0xbe,0x0f,0x5e,
0x5e,0x0f,0x88,0xc1,0xb4,0x34,0x0f,0xc7,
0x0f,0xdb,0xbe,0xc1,0xc1,0x0f,0x0f,0x8c,
0x0f,0xd4,0xc5,0xc5,0xc5,0x0f,0x0f,0xcc,

/* [ 95 ] */
0x80,0x81,0x6e,0x55,0x76,0x0f,0x0f,0x58,
0x77,0x81,0x6e,0x81,0x72,0x0f,0x0f,0x47,
0x54,0x6d,0x6e,0x54,0x6b,0x0f,0x0f,0x65,
0x76,0xc6,0xc6,0x76,0x35,0x0f,0x5e,0xc7,
0xc7,0xc7,0xc7,0x5f,0x0f,0x5e,0xc7,0x76,
0xc7,0xc7,0xc7,0x72,0x0f,0xc7,0xc7,0xc7,
0xc7,0xc7,0xc7,0xdc,0x64,0x8c,0xc7,0x70,
0xcc,0xcc,0xcc,0xcb,0xe2,0xcc,0x91,0x37,

/* [ 96 ] */
0x69,0x91,0x54,0x55,0x47,0x0f,0x6f,0x81,
0x5f,0x54,0x55,0x64,0x0f,0x0f,0x55,0x55,
0x54,0x6e,0xa7,0x0f,0x0f,0x7c,0x54,0x6d,
0x76,0xc8,0x66,0x0f,0x0f,0xc7,0x76,0xc6,
0x91,0x1d,0xc4,0x66,0x35,0xc7,0xc7,0xc7,
0x35,0x15,0xc5,0x0f,0x68,0xc7,0xc7,0xc7,
0x0f,0xbd,0xc4,0x35,0xcc,0x8c,0xc7,0xc7,
0xcd,0xc5,0x0c,0x68,0xcc,0xcc,0xcc,0xcc,

/* [ 97 ] */
0x6e,0x55,0x6e,0x0f,0x0f,0x6c,0x00,0x00,
0x55,0x54,0x7c,0x0f,0xb6,0xb8,0x6c,0x79,
0x6d,0x6d,0x0f,0x0f,0x36,0xc1,0xc2,0xbb,
0xc6,0xc6,0x0f,0x34,0xc1,0xbb,0xbb,0xc9,
0xc7,0x5e,0x0f,0xbd,0xc5,0xd4,0xce,0xce,
0xc7,0x0f,0x0f,0xc5,0xcf,0xd7,0xd0,0xd7,
0xb2,0x0f,0xda,0xc5,0xdd,0xdd,0xdd,0xd0,
0x5e,0x0f,0xd7,0xc4,0xdd,0xdd,0xdd,0xde,

/* [ 98 ] */
0x85,0x98,0x0e,0x84,0xb6,0xb1,0xb7,0x06,
0x93,0xbb,0xbb,0x8e,0xb7,0x36,0x7a,0xbc,
0xc1,0xb7,0xb7,0xb7,0xc1,0x7d,0xbc,0x0f,
0xc9,0xc9,0xbb,0xc5,0xc4,0x3d,0x0f,0x4f,
0xd4,0xd4,0xc2,0xbd,0x0f,0x3d,0x5e,0xc7,
0xc9,0xc9,0xbd,0xd8,0x0f,0x5e,0xc7,0xc7,
0xde,0xbd,0x0f,0x3d,0x47,0xc7,0xc7,0xc7,
0xbd,0x0f,0x0f,0x4f,0xcc,0x8c,0xcc,0xcc,

/* [ 99 ] */
0x0f,0x0f,0x55,0x6e,0x55,0x55,0x6e,0x0f,
0x0f,0x6f,0x81,0x55,0x55,0x55,0x7c,0x0f,
0x5e,0x55,0x6d,0x6d,0x6d,0x7c,0x3d,0xbc,
0xc6,0xc7,0x76,0xc6,0x53,0x3d,0x0f,0xca,
0xc7,0xc7,0xc7,0xc8,0x3d,0x0f,0xd5,0x88,
0xc7,0xc7,0x68,0x0f,0x0f,0x0f,0xd9,0x4d,
0xcb,0x39,0x0f,0x3d,0x0f,0x4f,0x68,0xc7,
0x39,0x0f,0x35,0xb3,0x5e,0xb9,0x82,0xcc,

/* [ 100 ] */
0x0f,0xb8,0xb6,0xb1,0x61,0x73,0x8e,0x21,
0xbd,0x99,0xb4,0xb4,0xbe,0x58,0xbf,0x29,
0xc1,0xc1,0x88,0xbf,0x34,0x2d,0x37,0x6f,
0xc4,0x34,0x0f,0x0d,0x0f,0x52,0x83,0xc6,
0x66,0x1d,0x52,0x53,0x53,0xc6,0xc7,0xc7,
0x2d,0xa0,0xcc,0xc7,0xc7,0xc7,0xc7,0xc7,
0x5f,0x82,0x8c,0xc7,0xc7,0xc7,0xc7,0xc7,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 101 ] */
0x21,0x79,0x5a,0x5a,0x58,0x5c,0x2c,0x2f,
0x29,0x0f,0x0f,0x2d,0x3d,0x71,0x94,0x72,
0x6f,0x32,0x72,0x76,0x6e,0x6d,0x6d,0x6d,
0xcb,0xcb,0x54,0xc6,0xc6,0xc6,0xc6,0xc6,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0xcb,
0xc7,0xc7,0xc7,0xc7,0xc7,0xc7,0x8f,0x68,
0xc7,0xc7,0xc7,0x72,0x53,0xa0,0x64,0x3d,
0xcc,0xb9,0x68,0x35,0x0d,0x1d,0xda,0xaa,

/* [ 102 ] */
0x6b,0x4f,0xb9,0x65,0x65,0x55,0xa6,0x55,
0x6e,0x6e,0x55,0x6e,0x55,0x6e,0x76,0x6e,
0x6d,0x6d,0x6d,0x6d,0x55,0x53,0x53,0x80,
0xc6,0xcb,0xcc,0x72,0x6f,0x1d,0x35,0x64,
0x5f,0x5e,0x47,0x64,0x3d,0x0f,0xc0,0x93,
0xa7,0x0f,0x1d,0x29,0xd3,0xbf,0xd4,0xd4,
0x29,0xd3,0xbd,0xbd,0xdf,0xde,0xcf,0xd0,
0xbf,0xdf,0xde,0xde,0xde,0xde,0xde,0xe3,

/* [ 103 ] */
0x55,0x6e,0x72,0x70,0x52,0x47,0x0d,0x34,
0x70,0x52,0x0d,0x3b,0x0f,0xbc,0xc0,0xbe,
0x0f,0x0f,0xc3,0x88,0x88,0xc4,0xb7,0xc1,
0x29,0xcd,0xbe,0xc9,0xc9,0xc5,0xc9,0xc9,
0xbd,0xc2,0xc2,0xc2,0xcf,0xd4,0xd4,0xd4,
0xce,0xc9,0xd0,0xd0,0xd0,0xd0,0xd0,0xd0,
0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
0xde,0xde,0xde,0xde,0xde,0xde,0xe3,0xde,

/* [ 104 ] */
0x29,0x7d,0x23,0x0f,0x02,0x00,0x00,0x00,
0xbe,0x36,0xc1,0xb6,0xa5,0xb8,0x6c,0xb8,
0xbb,0xc1,0xc1,0xbb,0xc5,0xc5,0xbb,0xbb,
0xc9,0xce,0xce,0xc9,0xc9,0xc9,0xce,0xc9,
0xce,0xd4,0xd4,0xd4,0xd4,0xd4,0xd4,0xd4,
0xd0,0xd7,0xd0,0xd0,0xd0,0xd0,0xd0,0xd0,
0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
0xde,0xdf,0xdf,0xdf,0xbd,0xdf,0xdf,0xbd,

/* [ 105 ] */
0xba,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x21,0x87,0x00,0x00,0x00,0xba,0x00,0x00,
0xbb,0xc0,0xc0,0xc0,0xc0,0xbf,0x79,0x28,
0xc9,0xcf,0xcf,0xc9,0xc9,0xcf,0xd0,0xca,
0xce,0xd4,0xd4,0xd4,0xd4,0xd4,0xc2,0xc2,
0xd0,0xd0,0xd0,0xd0,0xd0,0xd0,0xd0,0xd0,
0xdd,0xdd,0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,
0xdf,0xdf,0xc3,0xbc,0x34,0xbc,0xda,0xbc,

/* [ 106 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xba,0xba,0x33,0xba,0x00,0x00,0x00,0x00,
0xca,0xca,0xca,0xa5,0x0e,0x0e,0x61,0x00,
0xcf,0xc2,0xc2,0xd0,0xd6,0xca,0xca,0xb8,
0xd0,0xd0,0xce,0xce,0xce,0xd4,0xc9,0xca,
0xe0,0xbf,0x2d,0x88,0x88,0xda,0xbf,0xd3,
0xbe,0xaa,0x3d,0x35,0x35,0x0f,0x5a,0x85,

/* [ 107 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x6c,0x6c,0x50,0x00,0x00,0x00,0x00,0x00,
0xda,0xd5,0x29,0x5a,0x2c,0x31,0x00,0x00,
0x35,0x35,0x0f,0x35,0x35,0x4a,0x98,0x00,
0x6b,0x4d,0x84,0x26,0x6a,0x7d,0x9e,0x00,

/* [ 108 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x26,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3d,
0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x0f,

/* [ 109 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x26,0x23,
0x00,0x00,0x00,0x00,0x0e,0x93,0x1d,0xe7,
0x00,0x00,0x00,0x7e,0x0f,0x29,0xe2,0xcc,
0x00,0x00,0x9e,0x35,0x42,0xb9,0xcc,0xcc,
0x28,0x0f,0x3d,0xe2,0xcc,0xcc,0xcc,0xcc,
0x3d,0x29,0xb9,0xcc,0xcc,0xcc,0xcc,0xcc,
0x0f,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x3d,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 110 ] */
0x64,0xc8,0xc8,0x91,0x91,0x91,0x91,0xc8,
0xcc,0x82,0xcc,0xb9,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 111 ] */
0x51,0x3b,0x3b,0x3b,0x89,0xcc,0xcc,0xcc,
0x82,0x82,0xcc,0x82,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 112 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 113 ] */
0xcc,0xcc,0xb5,0x83,0x47,0x0f,0x9b,0x00,
0xcc,0xcc,0xb9,0x82,0xb9,0x94,0x90,0x22,
0xcc,0xcc,0xe1,0xe1,0xcc,0x82,0x82,0x82,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 114 ] */
0x00,0x9b,0x7e,0x9b,0x98,0x2d,0x0f,0x0f,
0xe8,0x64,0x89,0x3b,0x94,0x5e,0x42,0x37,
0xc8,0xcc,0xcc,0x82,0xcc,0xcc,0x8f,0x8f,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 115 ] */
0x0f,0x75,0xd8,0x0f,0x0f,0xe1,0xcc,0xcc,
0x52,0x37,0x52,0x0f,0x5e,0xcc,0xcc,0xcc,
0xe7,0xdc,0x91,0x8f,0xdc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xe1,0xe1,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xb5,0x8f,0x91,0x91,0x8f,0x82,0xcc,0xcc,

/* [ 116 ] */
0xcc,0xcc,0x68,0x0f,0xc4,0xc9,0xc9,0xc9,
0xcc,0xcc,0x83,0x0f,0xc3,0xc3,0xbe,0xc2,
0xcc,0xcc,0xcb,0x5e,0x64,0x3d,0x29,0xc4,
0xcc,0xcc,0xcc,0xcc,0xb9,0x89,0x0f,0x8a,
0xcc,0xcc,0xcc,0xcc,0xcc,0xb9,0x0f,0x34,
0xcc,0xcc,0xcc,0xcc,0xe1,0xe1,0x0f,0x34,
0xcc,0xcc,0xcc,0xcb,0xb9,0x89,0x0f,0x88,
0xcc,0xcc,0xcc,0x37,0x4f,0x29,0x0f,0xd7,

/* [ 117 ] */
0xc9,0xcf,0xc9,0xce,0xc9,0xce,0xc9,0xc5,
0xd4,0xd4,0xd4,0xd4,0xd4,0xd4,0xc2,0xc2,
0xc5,0xd4,0xd4,0xd4,0xd4,0xc2,0xc5,0x88,
0xc5,0xcf,0xce,0xcf,0xcf,0xc2,0xce,0x0f,
0xc2,0xd0,0xd7,0xd7,0xc9,0xd4,0xcd,0x0f,
0xc5,0xdd,0xdd,0xd4,0xe0,0xcd,0x0f,0x68,
0xc2,0xdd,0xdd,0xc2,0xbf,0x0f,0xc8,0xcc,
0xde,0xe3,0xe4,0xe4,0x0f,0x0f,0xcc,0xcc,

/* [ 118 ] */
0xbe,0x0f,0x0f,0xb9,0xcc,0xcc,0x4f,0x0f,
0xcd,0x0f,0x68,0xcc,0xcc,0xc8,0x3d,0x8a,
0x3d,0x4f,0xcc,0xe1,0xcc,0x0f,0x0f,0xbd,
0x52,0xcc,0xcc,0xcc,0xe7,0x0f,0xcd,0xd4,
0x91,0xcc,0xcc,0x83,0x3d,0x0f,0xd0,0xcf,
0xcc,0xe1,0xcc,0x1d,0x0f,0xbf,0xc9,0xe3,
0xcc,0xcc,0xb3,0x0f,0xee,0xf0,0xe4,0xe4,
0xcc,0xc8,0x0f,0xcd,0xe4,0xf0,0xe3,0xe3,

/* [ 119 ] */
0xc3,0xc2,0xc5,0xc5,0x93,0x0f,0x52,0xcc,
0xc2,0xc2,0xc9,0xc1,0x56,0x0f,0xc8,0xcc,
0xc2,0xce,0xce,0xc5,0x0f,0x0f,0xe1,0xcc,
0xd0,0xdd,0xdd,0xc2,0x29,0x0f,0xcc,0xcc,
0xdd,0xdd,0xdd,0xc5,0x2d,0x0f,0xcc,0xe1,
0xde,0xe3,0xde,0xc9,0xcd,0x0f,0xe7,0xcc,
0xe5,0xe4,0xe5,0xe4,0xe3,0xee,0x56,0x4f,
0xd6,0xe9,0xd6,0xe3,0xe9,0xe9,0xcd,0x2d,

/* [ 120 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0x91,0x0f,0xd3,
0xcc,0xcc,0xcc,0xcc,0xcc,0xb3,0x0f,0xdf,
0xcc,0xcc,0xcc,0xcc,0xc8,0x0f,0xcd,0xc2,
0xcc,0xcc,0xcc,0xc8,0x0f,0xee,0xe3,0xde,
0xcc,0xcc,0x68,0x42,0x0f,0xe9,0xe4,0xe4,
0xcc,0xc8,0xd8,0x0f,0xd5,0xe4,0xe9,0xe9,
0x51,0x56,0xee,0xd5,0xf1,0xed,0xed,0xed,
0x2d,0xd3,0xed,0xf3,0xf3,0xed,0xed,0xed,

/* [ 121 ] */
0xd0,0xbd,0x0f,0xb9,0xcc,0xcc,0xcc,0xcc,
0xc5,0xcd,0x64,0xcc,0xcc,0xcc,0xcc,0xe2,
0xc4,0x0f,0x4f,0xe1,0xcc,0xcc,0xcc,0x8f,
0xbf,0x0f,0x4f,0xe1,0xcc,0xcc,0xcc,0xdc,
0xd6,0x0f,0xb3,0xe1,0xcc,0xcc,0xcc,0xcc,
0xd6,0x0f,0x47,0xcc,0xcc,0xcc,0xcc,0xcc,
0xf1,0x75,0x42,0x82,0xcc,0xcc,0xcc,0xe1,
0xf3,0xe6,0x0f,0x64,0xc8,0xe1,0x68,0x47,

/* [ 122 ] */
0x35,0x0f,0xbf,0x8a,0x88,0xde,0xde,0xbd,
0x0f,0x0f,0xc8,0x3b,0x3d,0xbf,0xe4,0x0f,
0x0f,0x35,0xcc,0x51,0x0f,0xca,0xe5,0x3d,
0x3b,0xe2,0xcc,0x51,0x0f,0xec,0xbc,0x4f,
0xdc,0xcc,0xcc,0x3d,0xea,0xda,0x3d,0xcc,
0xcc,0xcc,0xb3,0xdb,0xeb,0x0c,0xb3,0xcc,
0x68,0x4f,0x29,0xf2,0xec,0x0f,0xe7,0xcc,
0x29,0x0c,0xe6,0xf3,0xf3,0x0c,0x4f,0xcc,

/* [ 123 ] */
0x0f,0x3d,0x68,0xcc,0xcc,0xcc,0xcc,0xcc,
0x3d,0x5e,0xe1,0xcc,0xcc,0xcc,0xcc,0xcc,
0x4f,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xe1,
0xe1,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x91,

/* [ 124 ] */
0x1d,0x32,0x91,0xcc,0xe1,0xcc,0xcc,0xcc,
0x51,0xdc,0xe1,0xcc,0xcc,0xcc,0xcc,0xcc,
0xb9,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xe1,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xb9,
0xcc,0xcc,0xcc,0xcc,0xcc,0xb9,0xc8,0x47,
0xcc,0xcc,0xdc,0xcc,0x83,0x47,0x3d,0x2d,
0xb9,0x91,0x37,0x47,0x1d,0x29,0x0f,0x0f,
0x52,0x64,0x0f,0x66,0xa7,0x0d,0x0f,0x1f,

/* [ 125 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x32,
0xcc,0xcc,0xcc,0xcc,0xb9,0x68,0x47,0x3d,
0xcc,0xdc,0xe2,0xc8,0x47,0x3d,0xbc,0xda,
0xc8,0x47,0x1d,0x56,0xda,0x75,0xeb,0xec,
0x3d,0x0f,0x0f,0x2d,0xda,0xdb,0xda,0xda,
0x0f,0x35,0x0f,0x0f,0xbc,0xa7,0x64,0x35,
0x29,0xa7,0x3b,0x2d,0xa7,0x0e,0x57,0x57,
0x85,0x27,0x33,0x5d,0x9c,0x00,0x00,0x00,

/* [ 126 ] */
0xb3,0x4f,0x2e,0x29,0xdb,0xca,0xdd,0xd6,
0x29,0xaa,0xca,0xbf,0xe5,0xe5,0xe9,0xe9,
0xeb,0xec,0xe3,0xed,0xe3,0xca,0xcd,0xd5,
0xea,0xea,0xcd,0xee,0xda,0x0f,0x2d,0x1d,
0x0f,0x0f,0x52,0x35,0x35,0x0f,0x52,0x69,
0x0f,0xa7,0xef,0x84,0x2f,0x87,0x92,0x00,
0x85,0x5d,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 127 ] */
0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe5,0xe4,
0xe9,0xe3,0xe5,0xbf,0xe6,0xe6,0xe6,0xea,
0xd5,0xd5,0xd5,0x0f,0x42,0x1d,0x29,0x1d,
0x29,0x29,0x29,0x29,0x52,0x6b,0x4d,0xa7,
0x6b,0x6b,0x87,0x2b,0x20,0x26,0x26,0x28,
0x00,0x00,0x50,0x97,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 128 ] */
0xe4,0xd6,0xca,0xd6,0xca,0xca,0xca,0xd6,
0xca,0xd3,0x3d,0x0f,0xaa,0x0f,0x0f,0x0f,
0x56,0x3d,0x0f,0x0f,0xa7,0xa7,0xa7,0xa7,
0x4d,0x5a,0xa7,0x4d,0x0e,0x31,0x0e,0x95,
0x50,0x50,0x50,0x3c,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 129 ] */
0xe6,0xaa,0x42,0xaa,0xbc,0xbc,0x29,0xbc,
0x0f,0x0f,0x3d,0xa7,0x37,0x37,0x64,0x37,
0xa7,0x37,0x87,0x0e,0x0e,0x5d,0x49,0x0e,
0x0e,0x49,0x98,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 130 ] */
0xbc,0xbc,0x52,0x52,0x42,0x42,0x52,0x1d,
0x37,0x37,0x84,0x9f,0x9a,0x57,0x84,0x85,
0x7b,0x7b,0x00,0x00,0x00,0x00,0x00,0x28,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 131 ] */
0x6c,0x2f,0x69,0x2f,0x69,0x87,0x85,0x26,
0x28,0x00,0x00,0x00,0x00,0x27,0x28,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 132 ] */
0x9b,0x97,0x59,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 133 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x50,
0x00,0x00,0x00,0x00,0x00,0x87,0x3d,0xdb,
0x00,0x50,0xf4,0x0f,0x66,0xea,0xeb,0xe5,

/* [ 134 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x0f,
0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x0f,
0x00,0x00,0x00,0x00,0x00,0x00,0x35,0x29,
0x00,0x00,0x00,0x00,0x5d,0xa2,0x3d,0x88,
0x00,0x5d,0x87,0x58,0x0f,0xd5,0x88,0xc2,
0x5a,0x0f,0xd5,0xcd,0xbd,0xde,0xde,0xde,
0xea,0xca,0xe4,0xe4,0xe4,0xe4,0xe9,0xe9,
0xe4,0xe3,0xe4,0xe4,0xe4,0xe5,0xe5,0xe5,

/* [ 135 ] */
0x0f,0xb3,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x0f,0x29,0x47,0x91,0xcc,0xcc,0xdc,0xcc,
0x35,0x66,0x29,0x3d,0x47,0x4f,0x68,0x4f,
0xbf,0xbf,0xaa,0x0f,0x1d,0x35,0x35,0x35,
0xc2,0xcf,0xbd,0xbf,0xbf,0xbf,0xbf,0xbf,
0xdd,0xde,0xde,0xde,0xd4,0xde,0xde,0xde,
0xe9,0xe9,0xe9,0xe9,0xe9,0xe9,0xe9,0xde,
0xe5,0xe5,0xe5,0xe5,0xe5,0xe5,0xe3,0xe3,

/* [ 136 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xdc,0xe2,0xcc,0xcc,
0x5e,0x4f,0x5e,0x4f,0x5e,0x3b,0xcc,0xcc,
0x35,0xd9,0x2e,0x0f,0x0f,0x29,0xcc,0xcc,
0xbf,0xc4,0xca,0x0f,0x0f,0x91,0xcc,0xcc,
0xde,0xc2,0xea,0x3d,0xc8,0xcc,0xcc,0xcc,
0xd6,0xcd,0x0f,0x4f,0xcc,0xcc,0xcc,0xcc,
0xc3,0x0f,0x35,0xdc,0xcc,0xcc,0xcc,0xcc,

/* [ 137 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xe7,

/* [ 138 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xb9,0xcb,0xcc,0xcc,0xcc,0xdc,
0xcc,0xcc,0xe7,0x37,0x4f,0x5e,0x4f,0xb3,
0xcc,0xcc,0x5e,0x0f,0xbc,0x29,0x29,0x29,
0xcc,0xc8,0x42,0x0f,0xca,0xca,0xca,0xca,
0x83,0x1d,0x0f,0xcd,0xf0,0xe3,0xe5,0xe9,
0x0f,0x0f,0xca,0xe9,0xf0,0xe4,0xe4,0xe4,
0x0f,0x0f,0xe3,0xe4,0xd6,0xd6,0xd6,0xd6,

/* [ 139 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0x8f,0x32,0x68,0x68,
0x5e,0x5e,0x5e,0xb3,0x4f,0x2e,0x2e,0x2e,
0x29,0x29,0x29,0x2e,0xaa,0xca,0xcd,0xcd,
0xd5,0xca,0xca,0xd5,0xd6,0xe3,0xe3,0xe4,
0xe9,0xe3,0xe9,0xe5,0xe3,0xe4,0xe3,0xe3,
0xe4,0xe4,0xe4,0xe4,0xe4,0xe3,0xe3,0xe3,
0xd6,0xd6,0xd6,0xd6,0xd6,0xd6,0xd6,0xd6,

/* [ 140 ] */
0xcc,0xcc,0xcc,0x8f,0x83,0x91,0x91,0xc8,
0x68,0x68,0xc8,0x0d,0x0f,0x56,0x1d,0x56,
0x2e,0x3d,0x56,0xd3,0x88,0x88,0x88,0xc3,
0xcd,0xcd,0xc3,0xd7,0xdf,0xdf,0xdf,0xe4,
0xe4,0xe5,0xe4,0xe3,0xe4,0xe5,0xe5,0xe5,
0xe4,0xe3,0xe3,0xe3,0xe3,0xe3,0xe3,0xe3,
0xe3,0xe3,0xe4,0xe3,0xe3,0xe3,0xe3,0xe3,
0xd6,0xd6,0xd6,0xd6,0xd6,0xd6,0xd6,0xd6,

/* [ 141 ] */
0x47,0x0d,0x64,0x56,0x35,0x83,0xe1,0xcc,
0xda,0xd3,0xcd,0x2e,0x0f,0x0f,0xcc,0xcc,
0xbd,0xdf,0xc9,0xd7,0x0f,0x0f,0xcc,0xcc,
0xde,0xde,0xde,0xc2,0x66,0x0f,0xcc,0xcc,
0xe5,0xe5,0xe5,0xe4,0x2d,0x0f,0xcc,0xcc,
0xe3,0xe3,0xe3,0xe4,0x15,0x0f,0xc8,0xe1,
0xe3,0xe3,0xe4,0xf0,0xbf,0x0f,0x35,0xcc,
0xd6,0xd6,0xd6,0xe4,0xe4,0x0f,0x0f,0xcc,

/* [ 142 ] */
0xcc,0xcc,0x83,0x0f,0xc3,0xd3,0xca,0xe4,
0xcc,0xcc,0x5e,0x0f,0xe9,0xf0,0xe4,0xe3,
0xcc,0xcc,0x91,0x0f,0xca,0xf0,0xe4,0xe3,
0xcc,0xcc,0xcc,0x3d,0x0f,0xe4,0xe5,0xe5,
0xcc,0xcc,0xcc,0x64,0x0f,0xed,0xed,0xf2,
0xcc,0xcc,0xcc,0x1d,0x0f,0xf3,0xf3,0xd3,
0xcc,0xcc,0xcc,0x64,0x0f,0xf3,0xf3,0xdb,
0xcc,0xcc,0xcc,0x35,0x0f,0xf3,0xf3,0xd3,

/* [ 143 ] */
0xe5,0xe4,0xe5,0xdb,0x2e,0x91,0xcc,0xcc,
0xe4,0xf0,0xf2,0x0f,0xb3,0xcc,0xcc,0xcc,
0xe9,0xd6,0xdb,0x35,0xb9,0xcc,0xcc,0xe1,
0xf2,0xc3,0x64,0x91,0xcc,0xcc,0xcc,0x64,
0xdb,0x4f,0xb9,0xe1,0xcc,0xcc,0x47,0x0f,
0x0f,0xe7,0xe1,0xcc,0xcc,0xe1,0x0f,0xdb,
0x0f,0xe2,0xcc,0xcc,0xcc,0x64,0x0f,0xf3,
0x0f,0x42,0xb3,0xb3,0x4f,0x0f,0xdb,0xf3,

/* [ 144 ] */
0xcc,0x4f,0x0f,0xed,0xe3,0xed,0xed,0xed,
0x5e,0x0c,0xe6,0xed,0xed,0xed,0xed,0xed,
0x0f,0xdb,0xf3,0xf3,0xed,0xed,0xf3,0xf3,
0x0f,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xdb,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf2,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf2,0xf2,0xf3,
0xf3,0xf1,0xca,0xf2,0xca,0x66,0x75,0xd3,

/* [ 145 ] */
0xed,0xed,0xed,0xd6,0xed,0xd6,0xe3,0xd5,
0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,
0xf3,0xf3,0xed,0xed,0xed,0xed,0xed,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf1,0xf3,
0xf3,0xf1,0xf1,0xf1,0xf3,0xd5,0xcd,0xee,
0xf3,0xc3,0xc3,0xd3,0xd3,0x0f,0x0f,0x2d,
0xaa,0x29,0x0f,0x29,0x64,0x64,0x0f,0x64,

/* [ 146 ] */
0xd5,0xf1,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xd5,0xca,
0xf2,0xcd,0xee,0xee,0xee,0xc3,0x0f,0x2d,
0x75,0x0f,0x0f,0x42,0x29,0x3d,0x29,0x39,
0xa7,0x42,0x3d,0x6b,0xa2,0x6b,0x16,0x0e,
0x7b,0x84,0x2f,0x26,0x00,0x6a,0x27,0x00,

/* [ 147 ] */
0xf3,0xf3,0xd3,0x0f,0x32,0x89,0x2e,0xda,
0xf3,0xf3,0xf3,0xee,0xcd,0x66,0xcd,0xec,
0xf1,0xf2,0xf2,0xec,0xeb,0x66,0xdb,0xda,
0xee,0x3d,0x3d,0x35,0xdb,0x0f,0x3d,0x39,
0x2d,0x2d,0x0f,0xa7,0x5a,0x37,0x87,0x0e,
0x69,0xa7,0xa7,0x57,0x6a,0x9c,0x98,0x00,
0x00,0x50,0x97,0x27,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 148 ] */
0xeb,0xf2,0xf3,0xf3,0xf3,0xdb,0x0f,0xb9,
0xec,0xee,0xc3,0xc3,0xea,0x75,0x0f,0x64,
0xda,0x0f,0x0f,0x3d,0x64,0x37,0x3d,0x42,
0x52,0x52,0x52,0x02,0x9f,0x20,0x20,0x73,
0x0e,0x95,0x92,0x0e,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 149 ] */
0xcc,0xcc,0x82,0xcc,0xcc,0x91,0x5e,0x35,
0xc8,0x68,0x68,0x68,0x4f,0x0f,0x0f,0x0d,
0x37,0x0f,0x0f,0x5a,0x3d,0x3d,0x02,0x5f,
0x5c,0x0f,0x37,0xb1,0x66,0x35,0x67,0x8b,
0x97,0x7b,0x33,0x00,0x58,0x32,0x67,0x55,
0x00,0x00,0x00,0x00,0xbc,0x72,0x67,0x77,
0x00,0x00,0x00,0x8d,0x0f,0x6e,0x55,0x77,
0x00,0x00,0x00,0x00,0x0f,0x6e,0x8b,0x77,

/* [ 150 ] */
0x0f,0x2b,0x35,0x6f,0x8b,0x5f,0x0f,0x00,
0x6f,0x8b,0x4e,0x8b,0x67,0x6e,0x0f,0x00,
0x8b,0x55,0x55,0x77,0x67,0x65,0x0f,0x00,
0x77,0x77,0x77,0x77,0x55,0x5f,0x0f,0x00,
0x77,0x77,0x77,0x77,0x55,0x8c,0x0f,0x00,
0x77,0x77,0x77,0x77,0x55,0x5f,0x0f,0x00,
0x77,0x77,0x77,0x77,0x55,0x6d,0x0f,0x00,
0x77,0x77,0x77,0x77,0x77,0x6d,0x94,0x00,

/* [ 151 ] */
0x6a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 152 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x61,
0x00,0x00,0x00,0x00,0x00,0x50,0x5a,0x2d,
0x00,0x00,0x00,0x00,0x6a,0x37,0x0f,0xd5,
0x00,0x00,0x00,0x00,0x95,0x0f,0xc3,0xf3,
0x00,0x00,0x00,0x00,0x2d,0x0f,0xcd,0xf3,
0x00,0x00,0x00,0x00,0x0f,0x35,0xd3,0xf3,
0x00,0x00,0x00,0x00,0x0f,0x0f,0x88,0xf3,
0x00,0x00,0x00,0x00,0x0f,0x0f,0xd3,0xf3,

/* [ 153 ] */
0x57,0x0f,0x75,0xca,0xe4,0xe3,0xe4,0xe4,
0xdb,0xea,0xe5,0xe9,0xf0,0xe9,0xe9,0xe9,
0xed,0xe5,0xd6,0xed,0xed,0xd6,0xed,0xed,
0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,
0xf3,0xed,0xed,0xed,0xed,0xed,0xed,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xed,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,

/* [ 154 ] */
0xe3,0xe4,0xe3,0xe3,0xe3,0xe3,0xe3,0xe3,
0xe9,0xe9,0xe9,0xe9,0xe9,0xe9,0xe9,0xe9,
0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,
0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,

/* [ 155 ] */
0xe3,0xe3,0xe3,0xe3,0xe3,0xe3,0xf0,0xe5,
0xe9,0xe9,0xe9,0xe9,0xe9,0xdf,0xd6,0xdb,
0xed,0xed,0xed,0xed,0xed,0xed,0xd3,0x0f,
0xed,0xed,0xed,0xed,0xf1,0xdb,0x0f,0x52,
0xf3,0xf3,0xf3,0xf3,0xf2,0x0f,0x64,0xb9,
0xf3,0xf3,0xf3,0xf2,0xdb,0x4f,0xe1,0xcc,
0xf3,0xf3,0xf2,0x0c,0x3d,0xcc,0xcc,0xcc,
0xf3,0xf2,0x0c,0x0f,0x5e,0xcc,0xcc,0xcc,

/* [ 156 ] */
0x0f,0x1d,0xe2,0xe1,0xe1,0xcc,0xcc,0xcc,
0x1d,0xb9,0xe1,0xcc,0xcc,0xcc,0xcc,0xcc,
0xc8,0xe1,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 157 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x83,0x3d,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x64,0x0f,
0xcc,0xcc,0xcc,0xcc,0xcc,0xb3,0x0f,0xd8,
0xcc,0xcc,0xcc,0xcc,0x5e,0x29,0x0c,0xe6,
0xcc,0xcc,0xcc,0xcc,0x0f,0xd8,0xf2,0xf3,
0xcc,0xcc,0xb9,0x4f,0x0f,0xdb,0xf3,0xf3,
0xcc,0xcc,0x5e,0x0f,0xdb,0xf3,0xf3,0xf3,
0xcc,0xe1,0x3d,0x0f,0xf3,0xf3,0xf3,0xf3,

/* [ 158 ] */
0xd8,0xe6,0xed,0xed,0xed,0xed,0xed,0xed,
0xe6,0xf1,0xf3,0xed,0xed,0xed,0xed,0xed,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,

/* [ 159 ] */
0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,
0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,

/* [ 160 ] */
0xed,0xed,0xed,0xed,0xed,0x0f,0x3d,0xcc,
0xed,0xed,0xed,0xed,0xf3,0xdb,0x0f,0xcc,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf2,0x0f,0x68,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0x0f,0x1d,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0x3d,0x0f,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xee,0x0f,
0xf3,0xf3,0xf3,0xf3,0xf1,0xf3,0xf3,0x0f,
0xf3,0xf1,0xf3,0xca,0xd3,0xee,0xea,0x0f,

/* [ 161 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xb9,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x68,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x47,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x64,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 162 ] */
0xcc,0xcc,0xcc,0x68,0x0f,0xdb,0xf3,0xcd,
0xcc,0xcc,0xcc,0xcc,0x0f,0x3d,0xf3,0xf3,
0xcc,0xcc,0xcc,0xcc,0x3d,0x0f,0xec,0xea,
0xcc,0xcc,0xcc,0xcc,0x35,0x0f,0xaa,0x35,
0xcc,0xcc,0xcc,0xcc,0xc8,0x0f,0x0f,0xa7,
0xcc,0xcc,0xcc,0xcc,0xcc,0x35,0x3d,0x22,
0xcc,0xcc,0xcc,0xcc,0xcc,0x83,0x0f,0x50,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x0f,0x21,

/* [ 163 ] */
0x35,0x35,0x2d,0x37,0xd8,0xea,0xec,0xe6,
0x34,0xaa,0x35,0x0f,0x0f,0xeb,0xda,0x0f,
0xda,0xda,0x35,0x0f,0x2d,0xd3,0x3d,0x0f,
0x0f,0x1d,0x64,0x3d,0x64,0x85,0x87,0x87,
0x2d,0x5c,0x9a,0x5c,0x5d,0x00,0x6a,0x27,
0x49,0x50,0x00,0x00,0x86,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 164 ] */
0xf2,0xc3,0x3d,0x75,0x0f,0x52,0x3d,0x0f,
0xaa,0x2d,0x2d,0x0f,0x39,0x48,0x37,0x52,
0x60,0x5a,0xa7,0x16,0x0e,0x28,0x28,0x5d,
0x26,0x00,0x50,0x3c,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 165 ] */
0x56,0x52,0x37,0x4d,0x0e,0x57,0x7b,0x5d,
0x20,0x61,0x46,0x73,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 166 ] */
0x00,0x00,0x86,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0xa9,0x00,0x9c,0x78,

/* [ 167 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x36,0x00,0x00,0x7d,0xfa,0xfa,0x9f,0xf7,
0x45,0xf8,0xf9,0xf4,0xac,0xac,0xac,0xac,

/* [ 168 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x7d,0x9f,0x9f,0x9c,0x9c,0x9f,
0x9f,0x9f,0x78,0x55,0x55,0xac,0xac,0xac,
0xac,0xac,0xfc,0xfc,0x9f,0xfc,0xfc,0xfc,

/* [ 169 ] */
0x00,0x00,0x00,0x00,0x0f,0x55,0x8b,0x77,
0x00,0x00,0x00,0x8d,0x0f,0x55,0x8b,0x77,
0x00,0x00,0x00,0x00,0x0f,0x55,0x77,0x77,
0x00,0x00,0x00,0x00,0x0f,0x76,0x8b,0x77,
0x00,0x00,0x00,0x44,0x5e,0xf5,0xf6,0xf6,
0x9c,0x9c,0x9c,0xf7,0xf4,0xf8,0xf9,0xf7,
0xac,0xac,0xac,0xf5,0xf8,0xf8,0xf8,0xfb,
0xfc,0xfc,0xfc,0xfc,0xfc,0xfb,0xfb,0xfb,

/* [ 170 ] */
0x77,0x77,0x77,0x77,0x77,0x55,0x68,0x75,
0x77,0x77,0x77,0x77,0x77,0x55,0x68,0x2d,
0x4e,0x77,0x77,0x77,0x77,0x55,0x68,0x2d,
0x77,0x77,0x77,0x77,0x77,0xa6,0x91,0x29,
0xf6,0xb2,0xf6,0xf6,0xf6,0xf5,0x78,0x39,
0xf7,0xf7,0xf7,0xf7,0xf7,0xf9,0xf8,0x69,
0xf9,0xf7,0xf9,0xf7,0xf7,0xf9,0xf8,0xfc,
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfc,

/* [ 171 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xe8,0xa9,0x9f,0x9f,0x9d,0x00,0x00,0x00,
0xac,0xac,0xac,0x78,0x78,0xfa,0x9a,0x36,
0xfc,0xfc,0xfc,0xfc,0xfc,0xad,0xae,0xef,

/* [ 172 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x78,0x9a,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 173 ] */
0x00,0x00,0x00,0x00,0x5a,0x0f,0x29,0xf3,
0x00,0x00,0x00,0x00,0x0e,0x0f,0x1d,0xca,
0x00,0x00,0x00,0x00,0x22,0x0f,0x35,0xf2,
0x00,0x00,0x00,0x00,0x0e,0x0f,0x35,0xcd,
0x00,0x00,0x00,0x00,0x00,0x2d,0x0f,0x1d,
0x00,0x00,0x00,0x00,0x00,0x5c,0x0f,0x1d,
0x00,0x00,0x00,0x00,0x00,0x20,0x0f,0x0f,
0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x0f,

/* [ 174 ] */
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0x8a,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0x2d,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,

/* [ 175 ] */
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xe6,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xe6,0xd8,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0x0c,0x29,
0xf3,0xf3,0xf3,0xf3,0xf3,0xe6,0x0f,0xb3,
0xf3,0xf3,0xf3,0xf3,0xe6,0x0c,0x0f,0xcc,
0xf3,0xf3,0xf3,0xf3,0xdb,0x3d,0x68,0xcc,

/* [ 176 ] */
0xf3,0xee,0x29,0x47,0xcc,0xcc,0xcc,0xcc,
0xe6,0x0c,0x47,0xe1,0xb9,0xcc,0xcc,0xcc,
0x66,0x64,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x3d,0x68,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x5e,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,

/* [ 177 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xc8,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xe2,0x42,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x35,0x0f,
0xcc,0xcc,0xcc,0xcc,0xcc,0xc8,0x0f,0x0c,
0xcc,0xcc,0xcc,0xcc,0xc8,0x42,0x0f,0xcd,
0xcc,0xcc,0xcc,0x91,0x0f,0x0c,0xee,0xf1,

/* [ 178 ] */
0xdc,0x4f,0x3d,0xdb,0xf3,0xf3,0xf3,0xf3,
0x35,0x0f,0xdb,0xf3,0xf3,0xf3,0xf3,0xf3,
0x0f,0xdb,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0x0f,0xe6,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xee,0xf1,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,

/* [ 179 ] */
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf1,0xf2,0xf3,
0xf3,0xf3,0xf1,0xf2,0xf2,0xc3,0x75,0xd3,
0xca,0xf2,0xd3,0x3d,0x3d,0x2d,0x2d,0x29,

/* [ 180 ] */
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0xf3,0xf3,0xf3,0xf1,0xf1,0xed,0xca,0xee,
0xf1,0xf1,0xf3,0xd3,0xcd,0xcd,0x3d,0x0f,
0xcd,0xc3,0x75,0x0f,0x2d,0x3b,0x0f,0x3d,
0x0f,0x0f,0xa7,0x3d,0xa7,0x9a,0x84,0x85,
0xa7,0x37,0x20,0x20,0x0e,0x00,0x00,0x00,

/* [ 181 ] */
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf1,0xf3,
0xf3,0xf3,0xf3,0xf2,0xf2,0xf3,0xcd,0x75,
0xf1,0xca,0xca,0x75,0x3d,0x3d,0x2d,0x0f,
0xd3,0x0f,0x0f,0x3d,0x29,0x29,0x39,0x37,
0x42,0x29,0xa7,0x69,0xa7,0x87,0x0e,0x95,
0x69,0x87,0x46,0x00,0x28,0x97,0x00,0x00,
0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 182 ] */
0xf2,0xd3,0xc3,0x75,0x29,0x0f,0x48,0x07,
0x75,0x0f,0x29,0x56,0x37,0x2d,0x57,0xf4,
0xa7,0x52,0xa7,0x9f,0x20,0x7b,0x26,0x31,
0x20,0x0e,0x73,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 183 ] */
0x0f,0xc8,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x0f,0x35,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0x58,0x0f,0x35,0x91,0xcc,0xcc,0xcc,0xcc,
0x28,0xd9,0x0f,0x52,0x37,0x91,0x8f,0xcc,
0x00,0x0e,0x5a,0x52,0x0f,0x52,0x42,0x47,
0x00,0x00,0x44,0x74,0x5a,0x2c,0x23,0x42,
0x00,0x00,0x00,0x28,0x27,0x00,0x00,0x85,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x99,

/* [ 184 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x5e,0x58,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x91,0x0f,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xc8,0x0f,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x4f,0x0f,
0x83,0x83,0x83,0x83,0x68,0x2d,0x35,0xd9,
0x37,0x42,0x42,0x42,0x52,0x29,0x2b,0x5d,
0x5c,0x79,0x79,0x79,0x79,0x79,0x95,0x26,
0xa9,0x00,0x00,0x00,0x00,0x26,0x00,0x00,

/* [ 185 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x95,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x6a,0x6c,
0x00,0x00,0x00,0x00,0x00,0x00,0xd1,0x7d,

/* [ 186 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xa9,0xef,0xf8,
0x00,0x00,0x00,0xf4,0xae,0x78,0x77,0x67,
0x00,0x4a,0x94,0x80,0x60,0x6b,0x6b,0x60,
0x37,0x69,0x69,0x85,0xa2,0xa2,0xa2,0xa2,
0x59,0x27,0x01,0xa9,0xa9,0xa9,0x3c,0xa9,

/* [ 187 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x7e,0x9c,0x9d,0x9c,0x6b,
0x7e,0x9f,0x57,0x78,0x55,0xac,0xf5,0xf5,
0x78,0xad,0xf5,0xf8,0xf8,0xf9,0xf8,0xf8,
0xab,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0x3c,0xa9,0x3c,0xa9,0x3c,0xb4,0x3c,0x01,

/* [ 188 ] */
0x7e,0x9d,0xf4,0xae,0x45,0xfa,0x45,0xac,
0x55,0x45,0xfb,0xf5,0xfc,0xfc,0xfc,0xfb,
0xfc,0xfc,0xfc,0xfc,0xfc,0xfb,0xfb,0xfc,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0xb4,0x01,0xb4,0xb4,0xb4,0x01,0xb4,0x01,

/* [ 189 ] */
0xf5,0xfc,0xac,0xfc,0xfc,0xfb,0xfb,0xfb,
0xfc,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0xfb,0xfb,0xfb,0xfb,0x9f,0xfb,0xfb,0xfb,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0xb4,0x3c,0xa9,0x3c,0xa9,0x3c,0xa9,0x3c,

/* [ 190 ] */
0xfb,0xfb,0xfc,0xfb,0xfb,0xfb,0xfb,0xfb,
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0xf8,0xfb,0xfc,0xfb,0xfb,0xfb,0x9f,0xfb,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0xb4,0x3c,0x01,0xb4,0x01,0xb4,0x01,0xb4,

/* [ 191 ] */
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0xfb,0xfb,0xfb,0xfb,0xfb,0x9f,0xfb,0xfb,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0x01,0xb4,0x01,0x3c,0xb4,0x3c,0xb4,0x3c,

/* [ 192 ] */
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0x9f,0xfb,0xfb,0x9f,0xfb,0xfb,0x9f,0xfb,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0x01,0xb4,0x01,0xb4,0x01,0xb4,0x01,0xb4,

/* [ 193 ] */
0xfb,0xfb,0xfb,0xfc,0xfb,0xfc,0xfc,0xf5,
0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,0xfb,
0xfb,0xfb,0xfc,0xfb,0xfc,0xfb,0xfc,0xfb,
0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0x01,0xb4,0x01,0xb4,0x01,0xb4,0xb4,0x01,

/* [ 194 ] */
0xad,0xae,0x6b,0x9c,0x00,0x00,0x00,0x00,
0xfc,0xfc,0xf5,0xae,0x6b,0x9c,0x00,0x00,
0xf9,0xfc,0xfc,0xfc,0xf5,0xae,0x78,0x6c,
0xf9,0xf9,0xf9,0xf9,0xf8,0xf8,0xf5,0x78,
0xfa,0xfa,0xfa,0xfa,0xfa,0xfa,0xfc,0xf6,
0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,
0xb4,0x01,0xb4,0x01,0xb4,0x01,0x3c,0xb4,

/* [ 195 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xfd,0x99,0x00,0x00,0x00,0x00,0x00,0x00,
0x77,0x4e,0xf4,0x00,0x00,0x00,0x00,0x00,
0x6b,0x6b,0x5e,0x84,0x00,0x00,0x00,0x00,
0xa2,0xa2,0xa2,0x69,0x42,0x9c,0x00,0x00,
0xb4,0x01,0x01,0x86,0x28,0x7d,0x86,0x00,

/* [ 196 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x57,0x0f,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x57,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6a,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 197 ] */
0x0f,0xaa,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,
0x0f,0x2d,0xf2,0xf3,0xf3,0xf3,0xf3,0xf3,
0x0f,0x0f,0xd3,0xf3,0xf3,0xf3,0xf3,0xf3,
0x37,0x0f,0x1d,0xca,0xf3,0xf3,0xf3,0xf3,
0x9a,0x37,0x0f,0x1d,0xf2,0xf3,0xf3,0xf3,
0x50,0x9a,0x0f,0x0f,0xcd,0xf3,0xed,0xf3,
0x99,0x31,0x37,0x0f,0x2d,0xe3,0xf3,0xed,
0x00,0x00,0x69,0x0f,0x0f,0xd3,0xf3,0xf3,

/* [ 198 ] */
0xf3,0xf3,0xf3,0xee,0xd8,0xc8,0xcc,0xcc,
0xf3,0xf3,0xf1,0x0f,0x4f,0xcc,0xcc,0xcc,
0xf3,0xf3,0xf3,0x0f,0x64,0xcc,0xcc,0xcc,
0xf3,0xf3,0xf3,0x0f,0x42,0xe1,0xcc,0xcc,
0xf3,0xf3,0xf1,0xd3,0x0f,0x64,0xb9,0xb9,
0xf3,0xf3,0xf3,0xf3,0xdb,0x0f,0x89,0x4f,
0xf3,0xf3,0xf3,0xf3,0xe6,0x3d,0x2d,0x2d,
0xf3,0xf3,0xf3,0xf3,0xf1,0xd3,0xd3,0x3d,

/* [ 199 ] */
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,
0xcc,0xcc,0xcc,0xcc,0xdc,0xcc,0xe2,0x5e,
0xb9,0xb9,0xb9,0xe1,0x5e,0x47,0x3b,0x29,
0x64,0x64,0x4f,0x4f,0x29,0x2d,0x35,0x3d,
0x2d,0x2d,0x0f,0x35,0x0f,0x0f,0x1d,0x75,
0x2d,0x29,0xda,0x2d,0x1d,0x1d,0x35,0x0f,

/* [ 200 ] */
0xcc,0xcc,0xcc,0x47,0x0f,0xee,0xf3,0xf3,
0xcc,0xcc,0xc8,0x29,0x3d,0xf3,0xf3,0xf3,
0x91,0xb3,0x0f,0x0c,0xe6,0xf3,0xf3,0xf3,
0x1d,0x2e,0xcd,0xe6,0xf3,0xf3,0xca,0xc3,
0x0f,0xec,0xf3,0xec,0xd3,0x3d,0x3d,0x0f,
0xda,0xec,0xea,0x3d,0x29,0x2d,0x0f,0x89,
0x75,0x66,0x0f,0x29,0xa7,0xa0,0x5a,0x95,
0x42,0x29,0x52,0x87,0x5d,0x00,0x27,0x00,

/* [ 201 ] */
0xf3,0xf3,0xf3,0xf1,0xf3,0xf2,0xd5,0xee,
0xf3,0xf1,0xf3,0xd5,0xcd,0x75,0x0d,0x0f,
0xcd,0xc3,0xd3,0x35,0x0f,0x3d,0x52,0x3d,
0x35,0x29,0x0f,0x64,0x3d,0x48,0x9a,0x84,
0x0f,0xa7,0x37,0x9a,0x57,0x95,0x00,0x00,
0x69,0x95,0x95,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 202 ] */
0x3d,0x3d,0x2d,0x37,0x0f,0xa7,0x64,0x87,
0x37,0x0f,0x37,0xa0,0x4d,0x95,0x28,0x27,
0x69,0x87,0x85,0x00,0x27,0x00,0x00,0x00,
0x28,0x00,0x00,0x00,0x00,0x86,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 203 ] */
0x95,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x86,0x9b,
0x00,0x00,0x29,0xcc,0x82,0xe2,0xe2,0xcc,
0x00,0x00,0x3b,0xcc,0x8f,0xa3,0x35,0xcc,
0x00,0xa5,0x82,0xcc,0x5e,0x7a,0xd9,0xcc,
0x00,0x29,0xcc,0xcc,0x1d,0x36,0xc0,0x8f,
0x99,0xc8,0xcc,0xe2,0x2d,0x9e,0xa1,0x1d,

/* [ 204 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x9e,0x00,0x00,0x00,0x00,0x28,0x6c,0x86,
0x51,0x8a,0x00,0x00,0x00,0xb1,0x1d,0xcc,
0xe2,0x69,0x00,0x00,0x00,0xa1,0x42,0xcc,
0xcc,0x83,0xff,0x00,0x00,0xa1,0x42,0xcc,
0xcc,0x32,0xa5,0x00,0x00,0xa1,0x42,0xcc,
0xcc,0xe2,0x85,0x00,0x00,0xa1,0x42,0xcc,

/* [ 205 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x86,0x86,0x73,0x7d,0x00,0x00,0x00,0x28,
0xcc,0xe7,0xe7,0x87,0x00,0x00,0x00,0x6c,
0xcc,0x64,0xcc,0xb5,0xff,0x00,0x00,0x5c,
0xcc,0x0f,0xcc,0x94,0xa5,0x00,0x44,0x1d,
0xe1,0x0f,0x5e,0xcc,0x92,0x00,0x00,0xe2,
0xcc,0x0f,0xaa,0xcc,0xb5,0x8d,0x69,0xcc,

/* [ 206 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x6c,0x86,0x86,0x86,0x86,0xd1,0x28,0x00,
0x89,0xe7,0x82,0x82,0xcc,0x35,0xa5,0x00,
0xcc,0x32,0xdc,0xcc,0xcc,0x32,0xa5,0x00,
0xcc,0x0f,0xe7,0xcc,0xcc,0x5e,0xa5,0x00,
0xc8,0x0f,0xb9,0xcc,0xcc,0x1d,0xa5,0x00,
0x53,0x0f,0xdc,0xe1,0xcc,0x5e,0xa5,0x00,

/* [ 207 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xd1,0x86,0x86,0x86,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0x82,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,

/* [ 208 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x86,0x9e,0x97,0x9e,0x86,0x9b,0xfe,0x00,
0x32,0x68,0xc8,0xb3,0xb5,0xcc,0x82,0xe2,
0x3d,0xb6,0x0e,0x97,0xa3,0xe2,0xcc,0xe2,
0x3d,0x9b,0x00,0x00,0xd9,0xe2,0xcc,0xe2,
0x1d,0xfe,0x00,0x7e,0x89,0xe7,0xcc,0x8f,
0xe7,0x5c,0x00,0x9c,0xcc,0xcc,0xe7,0x1f,

/* [ 209 ] */
0x00,0x00,0x00,0x00,0x00,0x6a,0x00,0x6a,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x0f,0x00,0x00,0x00,0x00,0xa2,0xef,0x95,
0x0f,0x00,0x00,0x00,0xe8,0xe2,0x52,0x86,
0x8a,0x00,0x00,0x92,0x89,0xdc,0x84,0xff,
0xff,0x00,0x00,0x7e,0x1d,0xdc,0xe7,0x2f,

/* [ 210 ] */
0x00,0x00,0x6a,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x99,0xd1,
0x00,0x00,0x00,0x00,0x00,0x00,0x97,0x0f,
0x2c,0x73,0x00,0x00,0x00,0x00,0x7e,0x3d,
0x1d,0x82,0x7e,0x00,0x00,0x00,0x28,0x3d,
0x0f,0xcc,0xb5,0xa5,0x00,0x00,0x28,0x3d,
0x32,0xcc,0x83,0xb8,0x00,0x00,0x28,0x3d,

/* [ 211 ] */
0x6a,0x6a,0x00,0x00,0x00,0x6a,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x8d,0x99,0x8d,0x9e,0x9e,0x9e,0x9b,0x9e,
0xcc,0x82,0xcc,0x64,0xb5,0xb3,0xe7,0xcc,
0xcc,0xcc,0xcc,0x0f,0x9b,0xd1,0x2f,0xb5,
0xcc,0xcc,0xcc,0x0f,0x00,0x00,0xff,0x3d,
0xcc,0xcc,0xcc,0x0f,0x00,0x00,0x00,0x0f,
0xcc,0xcc,0xcc,0x0f,0x00,0x00,0x00,0x0f,

/* [ 212 ] */
0x00,0x00,0x00,0x6a,0x00,0x00,0x6a,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xe7,0x7d,0x00,0x00,0x00,0x00,0x00,0x00,
0xcc,0x82,0x68,0x86,0x00,0x00,0x00,0x00,
0xcc,0xcc,0x51,0x95,0x00,0x00,0x00,0x00,
0xcc,0xcc,0xcc,0x2d,0xa9,0x00,0x00,0x00,
0xcc,0xcc,0xcc,0x3d,0x73,0x00,0x00,0x00,

/* [ 213 ] */
0x00,0x00,0x00,0x6a,0x6a,0x00,0x6a,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xd1,0x8d,0x8d,0x8d,0x9e,0x9e,
0x00,0x99,0x0f,0xcc,0x82,0xcc,0x35,0xb5,
0x00,0x8d,0x0f,0xcc,0xcc,0xcc,0x3d,0x97,
0x00,0x00,0x3d,0xcc,0xcc,0xcc,0x0f,0x00,
0x00,0x8d,0x3d,0xcc,0xcc,0xcc,0x0f,0x00,
0x00,0x00,0x0f,0xcc,0xcc,0xcc,0x0f,0x00,

/* [ 214 ] */
0x6a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x9e,0x9b,0x9e,0x00,0x00,0x00,0x00,0x00,
0xb3,0x91,0xcc,0x91,0x5d,0x00,0x00,0x00,
0xd1,0xa2,0xb5,0xcc,0x82,0xb3,0x44,0x00,
0x00,0x8d,0x0f,0xe2,0xcc,0xe7,0xfd,0x00,
0x00,0x00,0x0f,0xe2,0xcc,0xcc,0x94,0x6a,
0x00,0x00,0x0f,0xe2,0xcc,0xcc,0x3d,0x98,

/* [ 215 ] */
0x00,0x6a,0x6a,0x00,0x6a,0x00,0x6a,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xd1,0x86,0x99,0x8d,0x86,0x9e,0x9e,0x9e,
0x0f,0xcc,0x82,0xcc,0x32,0x83,0xb5,0x51,
0x0f,0xcc,0x82,0xcc,0x3d,0xa1,0x5d,0x5d,
0x0f,0xcc,0xcc,0xcc,0x3d,0x8e,0x00,0x00,
0x0f,0xcc,0xcc,0xcc,0x1d,0xfe,0x00,0x00,
0x0f,0xcc,0xcc,0xcc,0x8f,0x2f,0x00,0x00,

/* [ 216 ] */
0x6a,0x00,0x6a,0x00,0x00,0x00,0x00,0x6a,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x9e,0x9e,0x50,0x27,0x99,0x9e,0x8d,0x99,
0x51,0xc8,0x89,0x29,0xa5,0x3b,0xcc,0x82,
0x7b,0x7b,0x7b,0x28,0x21,0x32,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x79,0x32,0xcc,0xcc,
0x00,0x00,0x00,0x00,0xb6,0x32,0xcc,0xcc,
0x00,0x00,0x6a,0x00,0x79,0x32,0xcc,0xcc,

/* [ 217 ] */
0x00,0x6a,0x00,0x6a,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x8d,0x9e,0x9e,0x9e,0x9e,0x9b,0x8d,0x00,
0xe7,0x64,0xb5,0xb5,0x51,0xe7,0xc8,0x90,
0xe2,0x66,0x97,0x5d,0xb1,0x94,0xcc,0xcc,
0xe2,0xbc,0x00,0x00,0x8d,0xa3,0xe7,0xcc,
0xb5,0x29,0x00,0x00,0x99,0x6f,0xcc,0xcc,
0xe2,0x56,0x00,0x00,0x00,0xe7,0xcc,0xe7,

/* [ 218 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x95,0x50,0x9e,0x9e,0x86,0x86,
0x00,0x44,0x0f,0xc8,0xb5,0xb5,0x1d,0xcc,
0xcc,0x0f,0xa1,0x49,0x7b,0x97,0x0f,0xcc,
0xcc,0x0f,0x00,0x00,0x00,0x00,0x0f,0xcc,
0xcc,0x0f,0x00,0x00,0x00,0x00,0x0f,0xcc,
0xcc,0x0d,0x00,0x00,0x00,0x00,0x0f,0xcc,

/* [ 219 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x86,0x86,0x9e,0x9b,0x26,0x6c,0x7d,0x00,
0xcc,0x89,0xb3,0xc8,0xc8,0x1d,0xa3,0x00,
0xcc,0x42,0x93,0x98,0x57,0x1f,0xd1,0x00,
0xcc,0x42,0x7a,0x00,0x99,0x9d,0x36,0x00,
0xcc,0x42,0x74,0x00,0x00,0x00,0x00,0x00,
0xcc,0x42,0x74,0x00,0x00,0x00,0x00,0x00,

/* [ 220 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x68,
0x00,0x00,0x00,0x00,0x7d,0x44,0x89,0xcc,

/* [ 221 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9b,
0x00,0x00,0x00,0x00,0x00,0x00,0x73,0xc8,
0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xdc,
0xcc,0x32,0x89,0xcc,0x8f,0x35,0xd9,0x70,
0xdc,0x29,0xdc,0xcc,0x83,0x0f,0x6c,0x00,

/* [ 222 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x73,0x73,0x9e,0x26,0x9b,0x73,0x8d,
0xe2,0xe2,0x89,0xc8,0x68,0x89,0xcc,0xc8,
0xcc,0x94,0x93,0x98,0xa1,0x29,0xcc,0xcc,
0x8f,0x56,0xff,0x00,0xff,0xa3,0xe2,0xcc,
0x32,0x23,0x00,0x00,0x00,0x3b,0xcc,0xcc,
0xa9,0xd2,0x00,0x00,0x00,0xe7,0x82,0xe7,

/* [ 223 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x5d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x3b,0x99,0x00,0x00,0x00,0x00,0x00,0x00,
0x94,0xa5,0x00,0x00,0x00,0x00,0x00,0x00,
0x1d,0xa5,0x00,0x00,0x00,0x00,0x00,0x00,
0x52,0x8d,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 224 ] */
0x00,0x00,0x0e,0x64,0x0f,0x0f,0xd3,0xf3,
0x00,0x00,0x31,0x5d,0x1f,0x0f,0x0f,0xf3,
0x00,0x00,0x6a,0x6a,0x97,0x3d,0x0f,0xc3,
0x00,0x00,0x00,0x6a,0x00,0x4d,0x0f,0x0f,
0x00,0x00,0x00,0x00,0x00,0x95,0xa7,0x29,
0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x84,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6a,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 225 ] */
0xf3,0xf3,0xf3,0xf3,0xf3,0xf1,0xf3,0xcd,
0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xf3,0xea,
0xf3,0xf3,0xf3,0xf3,0xd5,0xee,0x75,0x66,
0xd3,0xee,0xee,0xd3,0x0f,0x2d,0x29,0x3d,
0x29,0x0f,0x0f,0x29,0x29,0x48,0x69,0x87,
0xa7,0x3d,0x3d,0x52,0x9a,0x0e,0x00,0x00,
0x46,0x9a,0x9a,0x92,0x97,0x00,0x00,0x00,
0x00,0x00,0x26,0x00,0x00,0x00,0x00,0x00,

/* [ 226 ] */
0x8a,0xcd,0xd5,0x2d,0x35,0x0f,0x3d,0x37,
0x66,0x75,0x0f,0x2d,0x64,0x52,0x16,0x5d,
0x29,0x3d,0x35,0x02,0x6c,0x22,0x97,0x00,
0x87,0xa7,0x9a,0x28,0x00,0x00,0x00,0x00,
0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 227 ] */
0x69,0x85,0x7b,0x00,0x00,0x00,0x00,0x86,
0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 228 ] */
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x93,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2f,
0x00,0x00,0x00,0x00,0x00,0x00,0x98,0x29,
0x00,0x00,0x00,0x00,0x00,0x00,0x59,0x5a,
0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x28,

/* [ 229 ] */
0x8a,0xe7,0xcc,0xe2,0x3b,0xb9,0x8f,0x94,
0x02,0xe7,0xcc,0xcc,0xe7,0xe2,0xe2,0xe7,
0xc8,0xcc,0xcc,0xb3,0x85,0x7c,0x7c,0x1f,
0x89,0xcc,0xe2,0x0f,0x00,0x95,0x9b,0x9b,
0xe2,0xcc,0xdc,0x0f,0x00,0x00,0x00,0x8e,
0x8f,0xe7,0xb3,0x93,0x00,0x00,0x00,0xa9,
0x57,0x84,0x7b,0x97,0x00,0x00,0x00,0x00,
0x99,0x99,0x36,0x6a,0x00,0x00,0x00,0x00,

/* [ 230 ] */
0xcc,0xcc,0x64,0x8e,0x00,0x6c,0x42,0xcc,
0xcc,0xcc,0x89,0x7e,0x00,0xa1,0x42,0xcc,
0xe2,0xcc,0xcc,0x58,0x00,0xa1,0x42,0xcc,
0x3d,0xcc,0xcc,0x35,0x00,0xa1,0x42,0xcc,
0x0f,0xcc,0xcc,0x89,0x00,0xa1,0x42,0xcc,
0x37,0xe7,0x8f,0x94,0xa5,0x73,0x3d,0xb9,
0xd1,0x84,0x57,0x7b,0x7b,0x8d,0x85,0x57,
0x00,0x99,0x99,0x9d,0x00,0x00,0x00,0x99,

/* [ 231 ] */
0xcc,0x0f,0x7a,0xdc,0xdc,0x7a,0x94,0xcc,
0xcc,0x3d,0x97,0x5e,0xcc,0x0f,0xcc,0x8f,
0xcc,0x0f,0x00,0x5e,0xcc,0x1d,0xcc,0x83,
0xcc,0x0f,0x00,0xa3,0x8f,0xcc,0xdc,0x2d,
0xcc,0x0f,0x00,0x93,0x5e,0xcc,0xdc,0x2d,
0x8f,0x0f,0x00,0x33,0x83,0x8f,0xb3,0xa5,
0x57,0xa5,0x00,0x99,0x46,0x5c,0x7b,0xa9,
0x9d,0x9e,0x00,0x00,0x86,0xd2,0x86,0x00,

/* [ 232 ] */
0x84,0xd9,0xdc,0xcc,0xcc,0x5e,0xa5,0x00,
0x21,0xd9,0xdc,0xcc,0xcc,0x1d,0xa5,0x00,
0x36,0xaa,0xe2,0xcc,0xcc,0x5e,0xa5,0x00,
0x00,0x2d,0xdc,0xcc,0xcc,0x42,0xa5,0x00,
0x00,0x1d,0x8f,0xcc,0xcc,0x5e,0xa5,0x00,
0x00,0x2d,0x5e,0xe7,0xe7,0x3d,0xa5,0x00,
0x00,0x4b,0xa2,0x92,0x92,0x1f,0x97,0x00,
0x00,0x00,0xd2,0x00,0x99,0x28,0x36,0x00,

/* [ 233 ] */
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xcc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0xdc,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x0f,0x8f,0x8f,0xe7,
0x00,0x00,0x00,0x00,0xa5,0xa2,0x46,0x57,
0x00,0x00,0x00,0x00,0x28,0x86,0x99,0x99,

/* [ 234 ] */
0xe2,0xe2,0xe2,0xe7,0xcc,0xcc,0xe7,0x34,
0x32,0x4d,0x8f,0xa0,0x51,0xe2,0xcc,0xb5,
0x3d,0xb6,0x9e,0x99,0xa3,0x8f,0xcc,0x82,
0x29,0x97,0x00,0x00,0xd9,0x94,0xcc,0xe2,
0x3d,0x7e,0x00,0x00,0x8a,0x5e,0xcc,0xdc,
0x3d,0x73,0x00,0x00,0x16,0x42,0xe7,0xe2,
0x58,0x99,0x00,0x00,0x95,0x85,0x92,0x92,
0x86,0x6a,0x00,0x00,0x00,0xd2,0x00,0x99,

/* [ 235 ] */
0x00,0x00,0x00,0xff,0x32,0xe2,0xcc,0xe2,
0x00,0x00,0x00,0x7d,0xe2,0x8f,0xfd,0xc8,
0x38,0x00,0xa1,0xc8,0xcc,0x2b,0xff,0x92,
0x0f,0x00,0x29,0xe2,0xcc,0x32,0xff,0xa1,
0x0f,0x00,0xa5,0x51,0xcc,0x8f,0x80,0x5e,
0x3d,0x46,0x00,0x84,0xb5,0xb3,0x5e,0x51,
0x69,0x95,0x00,0x97,0x7b,0xa2,0x57,0xa2,
0x9d,0x00,0x00,0x00,0x36,0x99,0x99,0x99,

/* [ 236 ] */
0xcc,0xe2,0x7a,0x44,0x00,0x00,0x7e,0x3d,
0xcc,0xc8,0x1f,0x59,0x00,0x00,0x28,0x3d,
0xe7,0xcc,0xc8,0xcc,0x1f,0x44,0x9e,0x3d,
0xb5,0xcc,0xcc,0xcc,0x0f,0x27,0x8d,0x3d,
0x8f,0xc8,0xdc,0xcc,0x3d,0x8d,0x9e,0x3d,
0x51,0x6c,0x2f,0xe7,0x1d,0x28,0x31,0x0f,
0x7b,0xff,0x7e,0xfd,0x84,0xd1,0x8d,0x85,
0x99,0x00,0x00,0x36,0x9d,0x9e,0x00,0x00,

/* [ 237 ] */
0xcc,0xcc,0xcc,0x0f,0x00,0x00,0x00,0x0f,
0xcc,0xcc,0xcc,0x0f,0x00,0x00,0x00,0x0f,
0xcc,0xcc,0xcc,0x0f,0x00,0x00,0x00,0xb3,
0xcc,0xcc,0xcc,0x2d,0x00,0x00,0x7d,0x82,
0xcc,0xcc,0xe2,0xe2,0x22,0x98,0xc8,0xe7,
0xe7,0xb5,0x51,0x51,0xb5,0xb5,0xb5,0xb5,
0x57,0x92,0x92,0x92,0x92,0xb1,0x84,0x7b,
0x99,0x99,0x99,0x99,0x99,0x99,0x99,0x99,

/* [ 238 ] */
0xcc,0xcc,0xcc,0x3d,0x28,0x00,0x00,0x00,
0xcc,0xcc,0xcc,0x0f,0x44,0x00,0x00,0x00,
0xcc,0xcc,0x94,0x8a,0x00,0x00,0x00,0x00,
0xcc,0xe2,0xb3,0x7a,0x00,0x00,0x00,0x00,
0xb5,0xb5,0xa5,0x99,0x00,0x00,0x00,0x00,
0x5c,0x92,0xb4,0x00,0x00,0x00,0x00,0x00,
0x9b,0x99,0x6a,0x00,0x00,0x00,0x00,0x00,
0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 239 ] */
0x00,0x8d,0x3d,0xcc,0xcc,0xcc,0x3d,0x8d,
0x00,0x8d,0x0f,0xcc,0xcc,0xcc,0x0f,0x00,
0x00,0x00,0x3d,0xcc,0xcc,0xcc,0x0f,0x00,
0x00,0x00,0x0f,0xcc,0xcc,0xcc,0x1d,0x00,
0x00,0x8d,0x0f,0xcc,0xcc,0xcc,0x8f,0x2f,
0x00,0x8d,0x0f,0xe7,0x51,0x51,0x51,0x8f,
0x00,0x00,0x69,0x57,0xb1,0x92,0x92,0x92,
0x00,0x00,0x28,0x99,0x99,0x99,0x99,0x99,

/* [ 240 ] */
0x00,0x00,0x0f,0xe2,0xcc,0xcc,0x42,0x98,
0x00,0x00,0x29,0xe2,0xcc,0xcc,0x3b,0x36,
0x00,0x00,0x94,0xcc,0xcc,0xb5,0x23,0x00,
0x00,0xd2,0xb9,0xcc,0xcc,0x89,0x38,0x00,
0xfe,0xc8,0xe7,0xb5,0x68,0x5c,0x8d,0x00,
0x51,0xb5,0x51,0x2f,0x84,0xb4,0x00,0x00,
0x92,0x84,0x7b,0x73,0x99,0x00,0x00,0x00,
0x99,0x99,0x99,0x36,0x00,0x00,0x00,0x00,

/* [ 241 ] */
0x3d,0xcc,0xcc,0xcc,0x32,0x68,0xb5,0x51,
0x0f,0xcc,0xcc,0xcc,0x3d,0x38,0x0e,0x46,
0x29,0xcc,0xcc,0xcc,0x0f,0x8e,0x00,0x00,
0x0f,0xcc,0xcc,0xcc,0x1d,0xfe,0x00,0x00,
0x0f,0xcc,0xcc,0xcc,0xe2,0x2f,0x00,0x00,
0x0f,0x8f,0x51,0x68,0x51,0xb5,0xb5,0x51,
0xa5,0xa2,0x92,0x92,0x92,0x57,0x92,0x7b,
0x00,0x99,0x99,0x99,0x99,0x99,0x99,0x99,

/* [ 242 ] */
0x51,0xb5,0x0f,0x00,0x21,0x32,0xcc,0xcc,
0x5d,0x7b,0x4a,0x00,0x79,0x32,0xcc,0xcc,
0x00,0x00,0x00,0x00,0xb6,0x5e,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x79,0x5e,0xcc,0xcc,
0x00,0x00,0x00,0x00,0x79,0x42,0xcc,0xcc,
0x51,0xb5,0x89,0x29,0x74,0x42,0xe7,0xe7,
0x92,0x92,0x84,0x95,0x8d,0x85,0x57,0x92,
0x99,0x99,0x86,0x00,0x00,0x99,0x99,0x99,

/* [ 243 ] */
0xcc,0x94,0x22,0xfe,0x70,0xe7,0x82,0x68,
0xe2,0x35,0xe7,0xb5,0x51,0x68,0x02,0xb1,
0xe2,0x66,0x00,0x95,0x6c,0x46,0xd1,0x99,
0x8f,0xbc,0x00,0x00,0x36,0x36,0x00,0x00,
0x91,0x2d,0x00,0x00,0x00,0x00,0x00,0x00,
0x5e,0x29,0x00,0x00,0x00,0x00,0x00,0x00,
0xa2,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,
0x99,0x36,0x00,0x00,0x00,0x00,0x00,0x00,

/* [ 244 ] */
0x53,0x9b,0x00,0x00,0x00,0x00,0x0f,0xcc,
0x73,0x36,0x00,0x00,0x00,0x00,0x0f,0xcc,
0x00,0x00,0x00,0x00,0x00,0x00,0x3d,0xcc,
0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xcc,
0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xcc,
0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x8f,
0x00,0x00,0x00,0x00,0x00,0x00,0x23,0xfd,
0x00,0x00,0x00,0x00,0x00,0x00,0x28,0x99,

/* [ 245 ] */
0xcc,0x42,0x74,0x00,0x00,0x00,0x00,0x00,
0xcc,0x42,0xa1,0x00,0x00,0x00,0x00,0x00,
0xcc,0x42,0x74,0x00,0x00,0x00,0x00,0x00,
0xcc,0x42,0x74,0x00,0x00,0x9d,0x97,0x00,
0xcc,0x42,0xa1,0x00,0x00,0x23,0x64,0xcc,
0xe2,0x3d,0x74,0x00,0x00,0x23,0x3d,0xe7,
0x57,0x1f,0xa9,0x00,0x00,0x97,0x2f,0x92,
0x99,0x28,0x6a,0x00,0x00,0x6a,0x99,0x99,

/* [ 246 ] */
0x00,0x00,0x00,0x00,0x4b,0x35,0x5e,0xcc,
0x00,0x00,0x00,0x00,0x00,0x29,0xdc,0xcc,
0x00,0x00,0x00,0x00,0x00,0x64,0xcc,0x91,
0x8d,0xb4,0x00,0x00,0x38,0xcc,0xcc,0x32,
0xe7,0x3d,0x00,0xd1,0x0f,0xdc,0xcc,0x0f,
0x94,0x0f,0x00,0x00,0x0f,0x83,0x5f,0xc3,
0xa2,0xb1,0x00,0x00,0xa5,0x90,0x49,0x8e,
0x86,0x00,0x00,0x00,0x99,0xd2,0x00,0x99,

/* [ 247 ] */
0x5e,0x0f,0xcc,0xdc,0xa3,0x84,0x50,0x00,
0x0f,0x5e,0xcc,0x42,0xbe,0x00,0x00,0x00,
0x0f,0xcc,0xcc,0x29,0x1f,0x00,0x00,0x00,
0x5e,0xcc,0xdc,0x42,0xb5,0x00,0x00,0x2f,
0x68,0xcc,0x35,0x2f,0x1f,0x26,0x93,0xe2,
0x32,0xb9,0x23,0xff,0x6a,0x00,0x29,0x94,
0xa2,0xfd,0x98,0x00,0x00,0x00,0x92,0xa2,
0x99,0xd2,0x00,0x00,0x00,0x00,0x36,0x9d,

/* [ 248 ] */
0x00,0x00,0x00,0x00,0x70,0xe2,0x53,0xa2,
0x00,0x00,0x5d,0x83,0x8f,0x7c,0x7e,0x99,
0x36,0x71,0x94,0x29,0x93,0x06,0x00,0x00,
0x82,0xcc,0x8f,0x42,0x68,0xb5,0x00,0x00,
0xcc,0xcc,0xe2,0x8f,0xdc,0xc8,0x00,0x00,
0xb5,0x51,0x51,0x8f,0xe7,0xb5,0xb5,0xb5,
0x92,0x92,0x92,0x57,0x92,0x92,0x92,0x92,
0x99,0x99,0x99,0x99,0x99,0x99,0x99,0x99,

/* [ 249 ] */
0xa1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x9b,0x46,0x00,0x00,0x00,0x00,0x00,0x00,
0x8f,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,
0x85,0x58,0x00,0x00,0x00,0x00,0x00,0x00,
0x99,0x9d,0x00,0x00,0x00,0x00,0x00,0x00,

};	

Uint16 cross_map[]={
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0002,0x0004,0x0006,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0008,0x000a,0x000c,0x000e,0x0010,0x0012,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0014,0x0016,0x0018,0x001a,0x001c,0x001e,0x0020,0x0022,0x0024,0x0026,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0028,0x002a,0x002c,0x002e,0x0030,0x0032,0x0034,0x0036,0x0038,0x003a,0x003c,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x003e,0x0040,0x0042,0x0044,0x0046,0x0048,0x004a,0x004c,0x004e,0x0050,0x0052,0x0054,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0056,0x0058,0x005a,0x005c,0x005e,0x0060,0x0062,0x0064,0x0066,0x0068,0x006a,0x006c,0x006e,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0070,0x0072,0x0074,0x0076,0x0078,0x0000,0x0000,0x007a,0x007c,0x007e,0x0080,0x0082,0x0084,0x0086,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0088,0x008a,0x008c,0x008e,0x0090,0x0092,0x0000,0x0000,0x0094,0x0096,0x0098,0x009a,0x009c,0x009e,0x00a0,0x0000,0x00a2,0x00a4,0x00a6,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x00a8,0x00aa,0x00ac,0x00ae,0x00b0,0x00b2,0x00b4,0x00b6,0x00b8,0x00ba,0x00bc,0x00be,0x00c0,0x00c2,0x00c4,0x00c6,0x00c8,0x00ca,0x00cc,0x00ce,0x00d0,0x00d2,0x00d4,0x00d6,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x00d8,0x00da,0x00dc,0x00de,0x00e0,0x00e2,0x00e4,0x00e6,0x00e0,0x00e8,0x00ea,0x00ec,0x00ee,0x00f0,0x00f2,0x00f4,0x00f6,0x00f8,0x00fa,0x00fc,0x00fe,0x0100,0x0102,0x0104,0x0106,0x0108,0x0000,0x0000,
0x0000,0x0000,0x0000,0x010a,0x010c,0x010e,0x0110,0x0112,0x0114,0x0116,0x0118,0x011a,0x00e0,0x011c,0x011e,0x0120,0x0122,0x0124,0x0126,0x0128,0x012a,0x012c,0x012e,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0130,0x0132,0x0134,0x0136,0x0138,0x013a,0x013c,0x013e,0x013e,0x0140,0x0142,0x0144,0x0146,0x0148,0x014a,0x014c,0x014e,0x0150,0x0152,0x0154,0x0156,0x0158,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x015a,0x015c,0x015e,0x0160,0x0162,0x0164,0x0166,0x0168,0x016a,0x016c,0x016e,0x0170,0x0172,0x0174,0x0176,0x0178,0x017a,0x017c,0x017e,0x0180,0x0182,0x0184,0x0186,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0188,0x018a,0x018c,0x018e,0x0190,0x0192,0x0194,0x0196,0x0198,0x019a,0x019c,0x019e,0x01a0,0x01a2,0x01a4,0x01a6,0x01a8,0x01aa,0x01ac,0x01ae,0x01b0,0x01b2,0x01b4,0x01b6,0x01b8,0x01ba,0x01bc,0x01be,0x0000,0x0000,
0x0000,0x0000,0x0000,0x01c0,0x01c2,0x01c4,0x01c6,0x0000,0x01c8,0x01ca,0x01cc,0x01ce,0x01d0,0x01d2,0x01d4,0x01d6,0x01d8,0x01da,0x01dc,0x01de,0x01e0,0x01e2,0x01e4,0x01e6,0x01e8,0x01ea,0x01ec,0x01ee,0x01f0,0x01f2,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
};	

Uint16 cross_pal[]={
	0x7fff,0x7b7e,0x008e,0x0125,0x0127,0x4e3c,0x2511,0x0060,
	0x0242,0x00c1,0x01c0,0x0280,0x0020,0x0026,0x531c,0x0000,
	0x0284,0x0245,0x02a5,0x02e5,0x0104,0x0064,0x082a,0x0225,
	0x0285,0x00e5,0x0265,0x0105,0x0065,0x0005,0x0100,0x08ae,
	0x35d8,0x39b3,0x4e9c,0x210e,0x7fbf,0x02c5,0x77bf,0x737f,
	0x6b5e,0x0002,0x0161,0x0088,0x14b1,0x0003,0x0024,0x1916,
	0x0341,0x7bbf,0x000b,0x5f1c,0x0c67,0x0004,0x7ffc,0x0007,
	0x5655,0x006e,0x027a,0x000a,0x671c,0x0001,0x031f,0x03ff,
	0x02dd,0x03e3,0x0006,0x03df,0x7fbd,0x01d9,0x3dd6,0x000d,
	0x002c,0x3e3c,0x2957,0x45d6,0x03bf,0x0091,0x00d6,0x000e,
	0x73bf,0x0014,0x0008,0x0033,0x017f,0x015f,0x0028,0x31d8,
	0x14ae,0x631c,0x0c6d,0x02bf,0x1cd2,0x463a,0x000c,0x00ba,
	0x00d2,0x635e,0x02e3,0x02df,0x0009,0x009d,0x0400,0x061f,
	0x0012,0x1112,0x7bdf,0x00f2,0x4618,0x011f,0x00ff,0x002f,
	0x0039,0x0037,0x0077,0x5afa,0x5256,0x0c00,0x013f,0x011a,
	0x0177,0x2d71,0x5e50,0x2db7,0x0034,0x56b8,0x671a,0x02ff,
	0x0030,0x01df,0x001e,0x0011,0x1d73,0x2175,0x77be,0x08b1,
	0x2466,0x000f,0x1828,0x053d,0x00bf,0x7ffe,0x7f79,0x0016,
	0x0cd6,0x0017,0x39d5,0x24e9,0x0010,0x52ba,0x035f,0x675c,
	0x5ada,0x7ffd,0x2196,0x6b5c,0x4ab9,0x775d,0x739e,0x269a,
	0x0093,0x4a53,0x2574,0x0ca9,0x039f,0x39b1,0x05bf,0x002b,
	0x01ff,0x7b7c,0x0805,0x025f,0x021f,0x023f,0x01dd,0x029f,
	0x019f,0x4234,0x00fc,0x0013,0x7b7b,0x0015,0x458f,0x7e93,
	0x5252,0x001d,0x7bff,0x7db1,0x0402,0x58cb,0x596d,0x4068,
	0x410a,0x7ed5,0x7d71,0x1403,0x6d6d,0x7dd2,0x005f,0x007f,
	0x0018,0x7d50,0x4c26,0x003e,0x001f,0x3005,0x7d0e,0x7d4f,
	0x7d2e,0x4a98,0x777c,0x1c04,0x7d2f,0x3002,0x7448,0x7c8c,
	0x0022,0x0ca4,0x2002,0x1400,0x001b,0x7cad,0x7cce,0x7cab,
	0x788a,0x003f,0x001a,0x7c49,0x7c6a,0x7c28,0x5002,0x0019,
	0x32fd,0x7c69,0x4402,0x5c02,0x7803,0x7c04,0x3802,0x1df8,
	0x7c6b,0x7805,0x6c03,0x7c05,0x1975,0x0a7f,0x0a3d,0x165d,
	0x129f,0x169f,0x0a1c,0x123d,0x127f,0x2e37,0x6b5a,0x7ff9
};
#endif
